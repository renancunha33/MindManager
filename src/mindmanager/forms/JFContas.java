package mindmanager.forms;

import java.awt.Color;
import java.awt.Toolkit;
import java.io.InputStream;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import mindmanager.bancodedados.ConexaoImpressao;
import mindmanager.dao.contaDao;
import mindmanager.logica.Impressao;
import mindmanager.logica.atributos;
import net.sf.jasperreports.engine.JRException;
public class JFContas extends javax.swing.JDialog {

    /**
     * Creates new form NewJDialog
     */
    public JFContas(java.awt.Frame parent, boolean modal) throws SQLException {
        super(parent, modal);
        initComponents();
        
         //Inicializa os anos no ComboBox da data 
          for(int i=2012;i<=2040;i++){
                  jCAno.addItem(String.valueOf(i));
              }
          jLDtVencimento.setVisible(false);
          
          listarContas();
            this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/mindmanager/imagens/logo_mindmanager(48x48).png")));
    }
    
     DefaultTableModel tmContas = new DefaultTableModel(null, new String []{"Código","Descrição","Valor","Vencimento","Status"});
    List<atributos> contas;
    ListSelectionModel lsmContas;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTConta = new javax.swing.JTabbedPane();
        jPContas = new javax.swing.JPanel();
        jPDados = new javax.swing.JPanel();
        jLNome = new javax.swing.JLabel();
        jLValor = new javax.swing.JLabel();
        jLVencimento = new javax.swing.JLabel();
        jTNome = new javax.swing.JTextField();
        jTValor = new javax.swing.JTextField();
        jLObs = new javax.swing.JLabel();
        jSObs = new javax.swing.JScrollPane();
        jTObs = new javax.swing.JTextArea();
        jLCodigo = new javax.swing.JLabel();
        jTCodigo = new javax.swing.JTextField();
        jLStatus = new javax.swing.JLabel();
        jCStatus = new javax.swing.JComboBox();
        jCDia = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jCMes = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jCAno = new javax.swing.JComboBox();
        jLDtInvalida = new javax.swing.JLabel();
        jLObrNome = new javax.swing.JLabel();
        jLObrVal = new javax.swing.JLabel();
        jLObrDt = new javax.swing.JLabel();
        jLObrStatus = new javax.swing.JLabel();
        jLDtVencimento = new javax.swing.JLabel();
        jPBotoes = new javax.swing.JPanel();
        jBAlterar = new javax.swing.JButton();
        jBSalvar = new javax.swing.JButton();
        jBCancelar = new javax.swing.JButton();
        jBImprimir = new javax.swing.JButton();
        jBNovo = new javax.swing.JButton();
        jBExcluir = new javax.swing.JButton();
        jBPesquisa = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jBProximo = new javax.swing.JButton();
        jPPesquisa = new javax.swing.JPanel();
        jSPesquisa = new javax.swing.JScrollPane();
        jTContas = new javax.swing.JTable();
        jLBusca = new javax.swing.JLabel();
        jCBusca = new javax.swing.JComboBox();
        jBBusca = new javax.swing.JButton();
        jTBusca = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Cadastro de Contas");
        setPreferredSize(new java.awt.Dimension(750, 356));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPDados.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLNome.setText("Descrição:");

        jLValor.setText("Valor:");

        jLVencimento.setText("Vencimento:");

        jTNome.setEditable(false);
        jTNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTNomeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTNomeKeyReleased(evt);
            }
        });

        jTValor.setEditable(false);
        jTValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTValorKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTValorKeyReleased(evt);
            }
        });

        jLObs.setText("Observações:");

        jTObs.setColumns(20);
        jTObs.setRows(5);
        jTObs.setEnabled(false);
        jTObs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTObsKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTObsKeyReleased(evt);
            }
        });
        jSObs.setViewportView(jTObs);

        jLCodigo.setText("Código:");

        jTCodigo.setEditable(false);

        jLStatus.setText("Status:");

        jCStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Status", "Paga", "Aguardando " }));
        jCStatus.setEnabled(false);
        jCStatus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCStatusKeyPressed(evt);
            }
        });

        jCDia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Dia", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        jCDia.setEnabled(false);
        jCDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCDiaActionPerformed(evt);
            }
        });
        jCDia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCDiaKeyPressed(evt);
            }
        });

        jLabel2.setText("/");

        jCMes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mês", "Janeiro", "Fevereiro", "Março ", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro" }));
        jCMes.setEnabled(false);
        jCMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCMesActionPerformed(evt);
            }
        });
        jCMes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCMesKeyPressed(evt);
            }
        });

        jLabel3.setText("/");

        jCAno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ano" }));
        jCAno.setEnabled(false);
        jCAno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCAnoActionPerformed(evt);
            }
        });
        jCAno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCAnoKeyPressed(evt);
            }
        });

        jLDtInvalida.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLDtInvalida.setForeground(new java.awt.Color(255, 0, 51));

        jLObrNome.setText("(*)");

        jLObrVal.setText("(*)");

        jLObrDt.setText("(*)");

        jLObrStatus.setText("(*)");

        jLDtVencimento.setEnabled(false);

        javax.swing.GroupLayout jPDadosLayout = new javax.swing.GroupLayout(jPDados);
        jPDados.setLayout(jPDadosLayout);
        jPDadosLayout.setHorizontalGroup(
            jPDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPDadosLayout.createSequentialGroup()
                        .addComponent(jLObrDt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLVencimento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLDtInvalida, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE))
                    .addGroup(jPDadosLayout.createSequentialGroup()
                        .addGroup(jPDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPDadosLayout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLObrVal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLValor))
                            .addGroup(jPDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLObs)
                                .addComponent(jLCodigo)
                                .addGroup(jPDadosLayout.createSequentialGroup()
                                    .addComponent(jLObrNome)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLNome))
                                .addGroup(jPDadosLayout.createSequentialGroup()
                                    .addComponent(jLObrStatus)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLStatus))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTNome, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                            .addGroup(jPDadosLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jSObs, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE))
                            .addGroup(jPDadosLayout.createSequentialGroup()
                                .addGroup(jPDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPDadosLayout.createSequentialGroup()
                                        .addComponent(jTValor, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLDtVencimento))
                                    .addComponent(jCStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 312, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPDadosLayout.setVerticalGroup(
            jPDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLCodigo)
                    .addComponent(jTCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLNome)
                    .addComponent(jLObrNome)
                    .addComponent(jTNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPDadosLayout.createSequentialGroup()
                        .addGroup(jPDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLValor)
                            .addComponent(jLObrVal)
                            .addComponent(jLDtVencimento))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLVencimento)
                            .addComponent(jCDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jCMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jCAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLObrDt)))
                    .addComponent(jLDtInvalida, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLObs)
                    .addComponent(jSObs, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLStatus)
                    .addComponent(jLObrStatus)
                    .addComponent(jCStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPBotoes.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/pencil (25x25).png"))); // NOI18N
        jBAlterar.setText("Alterar");
        jBAlterar.setEnabled(false);
        jBAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlterarActionPerformed(evt);
            }
        });

        jBSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/disk (25x25).png"))); // NOI18N
        jBSalvar.setText("Salvar");
        jBSalvar.setEnabled(false);
        jBSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalvarActionPerformed(evt);
            }
        });

        jBCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/ico_delete.png"))); // NOI18N
        jBCancelar.setText("Cancelar");
        jBCancelar.setEnabled(false);
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jBImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/print-icon.png"))); // NOI18N
        jBImprimir.setText("Imprimir");
        jBImprimir.setEnabled(false);
        jBImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBImprimirActionPerformed(evt);
            }
        });

        jBNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/add (25x25).png"))); // NOI18N
        jBNovo.setText("Novo");
        jBNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNovoActionPerformed(evt);
            }
        });

        jBExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/lixo (25x25).png"))); // NOI18N
        jBExcluir.setText("Excluir");
        jBExcluir.setEnabled(false);
        jBExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirActionPerformed(evt);
            }
        });

        jBPesquisa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/Start-Menu-Search-icon (1).png"))); // NOI18N
        jBPesquisa.setText("Pesquisar");
        jBPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPesquisaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPBotoesLayout = new javax.swing.GroupLayout(jPBotoes);
        jPBotoes.setLayout(jPBotoesLayout);
        jPBotoesLayout.setHorizontalGroup(
            jPBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPBotoesLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jBPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPBotoesLayout.setVerticalGroup(
            jPBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jBSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jBImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jBCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("(*) -> Campos obrigatórios");

        jBProximo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/Arrow-Right-icon.png"))); // NOI18N
        jBProximo.setToolTipText("Próxima aba");
        jBProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBProximoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPContasLayout = new javax.swing.GroupLayout(jPContas);
        jPContas.setLayout(jPContasLayout);
        jPContasLayout.setHorizontalGroup(
            jPContasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPContasLayout.createSequentialGroup()
                .addGroup(jPContasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPContasLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jPDados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPContasLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBProximo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPContasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(21, 21, 21))
        );
        jPContasLayout.setVerticalGroup(
            jPContasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPContasLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPContasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPContasLayout.createSequentialGroup()
                        .addComponent(jPBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addContainerGap())
                    .addGroup(jPContasLayout.createSequentialGroup()
                        .addComponent(jPDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBProximo)
                        .addGap(0, 8, Short.MAX_VALUE))))
        );

        jTConta.addTab("Contas", jPContas);

        jTContas.setModel(tmContas);
        jTContas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTContasMouseClicked(evt);
            }
        });
        jSPesquisa.setViewportView(jTContas);

        jLBusca.setText("Busca por:");

        jCBusca.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Descrição", "Código", "Status" }));
        jCBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBuscaActionPerformed(evt);
            }
        });

        jBBusca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/Start-Menu-Search-icon.png"))); // NOI18N
        jBBusca.setText("Pesquisar");
        jBBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscaActionPerformed(evt);
            }
        });

        jTBusca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTBuscaKeyReleased(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/Arrow-Right-icon2.png"))); // NOI18N
        jButton1.setToolTipText("Voltar à primeira aba");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPPesquisaLayout = new javax.swing.GroupLayout(jPPesquisa);
        jPPesquisa.setLayout(jPPesquisaLayout);
        jPPesquisaLayout.setHorizontalGroup(
            jPPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPPesquisaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, 715, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPPesquisaLayout.createSequentialGroup()
                        .addComponent(jLBusca)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTBusca, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBBusca))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPPesquisaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPPesquisaLayout.setVerticalGroup(
            jPPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPPesquisaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLBusca)
                    .addComponent(jCBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBBusca)
                    .addComponent(jTBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTConta.addTab("Pesquisa", jPPesquisa);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/bg.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jTConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jTConta, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-783)/2, (screenSize.height-406)/2, 783, 406);
    }// </editor-fold>//GEN-END:initComponents
String nome;
    private void jTNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTNomeKeyPressed
        if (evt.getKeyCode() == 10) {
            jTValor.requestFocus();
        }

        if (jTNome.getText().length() < 80) {

            nome = jTNome.getText();

        }

        if (jTNome.getText().length() > 79) {
            if (evt.getKeyCode() != 10) {
                jTNome.setText("");
                jTNome.setText(nome);
            }

        }
    }//GEN-LAST:event_jTNomeKeyPressed

    private void jTNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTNomeKeyReleased
        if (jTNome.getText().length() < 80) {

            nome = jTNome.getText();

        }

        if (jTNome.getText().length() > 79) {
            if (evt.getKeyCode() != 10) {
                jTNome.setText("");
                jTNome.setText(nome);
            }

        }
    }//GEN-LAST:event_jTNomeKeyReleased
String valor;
int ponto;
    private void jTValorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTValorKeyPressed
        if (evt.getKeyCode() == 10) {
            jCDia.requestFocus();
        }

        if (evt.getKeyCode() == 16 || evt.getKeyCode() == 18) {
            jCDia.requestFocus();
        }


        if (jTValor.getText().length() < 10) {
            if (evt.getKeyCode() >= 48 && evt.getKeyCode() <= 57 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105
                    || evt.getKeyCode() == 8 || evt.getKeyCode() >= 37 && evt.getKeyCode() <= 40 || evt.getKeyCode() == 10
                    || evt.getKeyCode() == 46) {

                valor = jTValor.getText();

                if (evt.getKeyCode() == 46) {
                    ponto++;
                }

                if (jTValor.getText().length() == 0) {
                    if (evt.getKeyCode() == 46) {
                        ponto = 2;
                    }
                }

                if (evt.getKeyCode() == 46 && ponto >= 2) {
                    JOptionPane.showMessageDialog(this, "Digite apenas números.", "Atenção", JOptionPane.WARNING_MESSAGE);
                    jTValor.setText("");
                    jTValor.setText(valor);
                }

                if (!jTValor.getText().contains(".")) {
                    ponto = 0;
                }


            } else {
                JOptionPane.showMessageDialog(this, "Digite apenas números.", "Atenção", JOptionPane.WARNING_MESSAGE);
                jTValor.setText("");
                jTValor.setText(valor);
            }

        } else {
            jTValor.setText("");
            jTValor.setText(valor);
        }

        if (jTValor.getText().length() > 9) {
            if (evt.getKeyCode() != 10) {
                jTValor.setText("");
                jTValor.setText(valor);
            }

        }


        if (evt.getKeyCode() == 38) {
            //upperCase();
            jTNome.requestFocus();
        }
    }//GEN-LAST:event_jTValorKeyPressed

    private void jTValorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTValorKeyReleased
        if (jTValor.getText().length() < 10) {
            if (evt.getKeyCode() >= 48 && evt.getKeyCode() <= 57 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105
                    || evt.getKeyCode() == 8 || evt.getKeyCode() >= 37 && evt.getKeyCode() <= 40 || evt.getKeyCode() == 10
                    || evt.getKeyCode() == 46) {

                valor = jTValor.getText();

                if (evt.getKeyCode() == 46) {
                    ponto++;
                }

                if (jTValor.getText().length() == 0) {
                    if (evt.getKeyCode() == 46) {
                        ponto = 2;
                    }
                }

                if (evt.getKeyCode() == 46 && ponto >= 2) {
                    JOptionPane.showMessageDialog(this, "Digite apenas números.", "Atenção", JOptionPane.WARNING_MESSAGE);
                    jTValor.setText("");
                    jTValor.setText(valor);
                }

                if (!jTValor.getText().contains(".")) {
                    ponto = 0;
                }


            } else {
                JOptionPane.showMessageDialog(this, "Digite apenas números.", "Atenção", JOptionPane.WARNING_MESSAGE);
                jTValor.setText("");
                jTValor.setText(valor);
            }

        } else {
            jTValor.setText("");
            jTValor.setText(valor);
        }

        if (jTValor.getText().length() > 9) {
            if (evt.getKeyCode() != 10) {
                jTValor.setText("");
                jTValor.setText(valor);
            }

        }
    }//GEN-LAST:event_jTValorKeyReleased
String obs;
    private void jTObsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTObsKeyPressed
        if (jTObs.getText().length() < 200) {
            obs = jTObs.getText();
        }


        if (jTObs.getText().length() > 199) {
            if (evt.getKeyCode() != 10) {
                jTObs.setText("");
                jTObs.setText(obs);
            }

        }
    }//GEN-LAST:event_jTObsKeyPressed

    private void jTObsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTObsKeyReleased
        if (jTObs.getText().length() < 200) {
            obs = jTObs.getText();
        }


        if (jTObs.getText().length() > 199) {
            if (evt.getKeyCode() != 10) {
                jTObs.setText("");
                jTObs.setText(obs);
            }

        }
    }//GEN-LAST:event_jTObsKeyReleased

    private void jCStatusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCStatusKeyPressed
        if (evt.getKeyCode() == 38) {
            jTObs.requestFocus();
        }
    }//GEN-LAST:event_jCStatusKeyPressed

    private void jCDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCDiaActionPerformed
        validaData();
    }//GEN-LAST:event_jCDiaActionPerformed

    private void jCDiaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCDiaKeyPressed
        if (evt.getKeyCode() == 10) {
            jCMes.requestFocus();
        }

        if (evt.getKeyCode() == 38) {
            jTValor.requestFocus();
        }
    }//GEN-LAST:event_jCDiaKeyPressed

    private void jCMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCMesActionPerformed
        validaData();
    }//GEN-LAST:event_jCMesActionPerformed

    private void jCMesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCMesKeyPressed
        if (evt.getKeyCode() == 10) {
            jCAno.requestFocus();
        }

        if (evt.getKeyCode() == 38) {
            jCDia.requestFocus();
        }
    }//GEN-LAST:event_jCMesKeyPressed

    private void jCAnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCAnoActionPerformed
        validaData();
    }//GEN-LAST:event_jCAnoActionPerformed

    private void jCAnoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCAnoKeyPressed
        if (evt.getKeyCode() == 10) {
            jTObs.requestFocus();
        }

        if (evt.getKeyCode() == 38) {
            jCMes.requestFocus();
        }
    }//GEN-LAST:event_jCAnoKeyPressed

    private void jBAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlterarActionPerformed
        try {
            alteraConta();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problema no botão alterar.\n"+ex);
        }
    }//GEN-LAST:event_jBAlterarActionPerformed

    private void jBSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalvarActionPerformed
        cadastrarContas();
    }//GEN-LAST:event_jBSalvarActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        limparDados();
        desabilitaDados();
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jBImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBImprimirActionPerformed
         if (verificaDados()) {
           impressaoConta();
        } else {
            JOptionPane.showMessageDialog(null, "Todos os campos obrigatórios devem ser preenchidos para impressão.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jBImprimirActionPerformed

    private void jBNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNovoActionPerformed
        habilitaDados();
        limparDados();
        jBAlterar.setEnabled(false);
        jTNome.requestFocus();
    }//GEN-LAST:event_jBNovoActionPerformed

    private void jBExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirActionPerformed
        try {
            excluirConta();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro no botão Excluir.\n" + ex);
        }
    }//GEN-LAST:event_jBExcluirActionPerformed

    private void jTContasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTContasMouseClicked
        linhaSelecionada(jTContas);
    }//GEN-LAST:event_jTContasMouseClicked

    private void jCBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBuscaActionPerformed
        try {
            listarContas();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas ao selecionar tipo de pesquisa.\n" + ex);
        }
    }//GEN-LAST:event_jCBuscaActionPerformed

    private void jBBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscaActionPerformed
        try {
            listarContas();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas no botão de pesquisa.\n" + ex);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Nenhhuma conta encontrada.\n" + e);
        }

        if (msg == false) {
            JOptionPane.showMessageDialog(null, "Nenhuma conta encontrada.", "Pesquisa", JOptionPane.INFORMATION_MESSAGE);
        }
        jTBusca.requestFocus();
    }//GEN-LAST:event_jBBuscaActionPerformed

    private void jTBuscaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTBuscaKeyReleased
        if (evt.getKeyCode() >= 60 && evt.getKeyCode() <= 90 || evt.getKeyCode() >= 37 && evt.getKeyCode() <= 40
                || evt.getKeyCode() >= 48 && evt.getKeyCode() <= 57 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105
                || evt.getKeyCode() == 8 || evt.getKeyCode() == 10) {
            try {
                listarContas();

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Problemas no campo de pesquisa.\n" + ex);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Nenhhuma conta encontrada.\n" + e);
            }
            jTBusca.requestFocus();
        }
    }//GEN-LAST:event_jTBuscaKeyReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
      sair();
    }//GEN-LAST:event_formWindowClosing

    private void jBPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPesquisaActionPerformed
        jTConta.setSelectedComponent(jPPesquisa);
    }//GEN-LAST:event_jBPesquisaActionPerformed

    private void jBProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBProximoActionPerformed
        jTConta.setSelectedComponent(jPPesquisa);
    }//GEN-LAST:event_jBProximoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jTConta.setSelectedComponent(jPContas);
    }//GEN-LAST:event_jButton1ActionPerformed

      public void cadastrarContas(){
         String data="";
        if(verificaDados()){
            try {
            atributos user = new atributos();
            user.setDsContas(jTNome.getText());
            user.setValorContas(jTValor.getText());
             user.setDiaConta(jCDia.getSelectedItem().toString());
            user.setMesConta(jCMes.getSelectedItem().toString());
            user.setAnoConta(jCAno.getSelectedItem().toString());
                data = jCDia.getSelectedItem().toString();
data = data+"/"+jCMes.getSelectedItem().toString();
        data = data+"/"+jCAno.getSelectedItem();toString();
           user.setVencimentoContas(data);
            user.setObsContas(jTObs.getText());
            user.setStatusContas((jCStatus.getSelectedItem().toString()));
           


            contaDao dao = new contaDao();
            dao.cadastroConta(user);
            desabilitaDados();
            JOptionPane.showMessageDialog(null, "Conta cadastrada com sucesso.","Cadastro",JOptionPane.INFORMATION_MESSAGE); 
            listarContas();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Erro com o banco de dados.\n"+ex,"Erro",JOptionPane.ERROR_MESSAGE);
        }
        }
    }
        
         public void excluirConta() throws SQLException{
             UIManager.put("OptionPane.noButtonText", "Não");  
         UIManager.put("OptionPane.yesButtonText", "Sim");
         int resp = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir esta conta?", "Confirmação", 0,3);
         if (resp == 0){
             atributos at = new atributos();
             at.setCodigoContas(Long.valueOf(jTCodigo.getText()));
               contaDao dao;
                dao = new contaDao();
                dao.excluirConta(at);
                mostraPesquisa(contas);
                JOptionPane.showMessageDialog(null,"Conta excluída com sucesso.","Excluir",JOptionPane.INFORMATION_MESSAGE);
                listarContas();
                limparDados();
               desabilitaDados();
         }
        }
         
         private void alteraConta() throws SQLException {
             String data="";
        if(jTContas.getSelectedRow() != -1 || dados==1){
            UIManager.put("OptionPane.noButtonText", "Não");  
         UIManager.put("OptionPane.yesButtonText", "Sim");
            int resp = JOptionPane.showConfirmDialog(this, "Deseja realmente alterar este psicólogo?", "Confirmação", 0,3);
         if (resp == 0){
             if(verificaDados()){
                atributos at = new atributos();
                contaDao dao =  new contaDao();
                at.setCodigoContas(Long.valueOf(jTCodigo.getText()));
                at.setDsContas(jTNome.getText());
                at.setValorContas(jTValor.getText());
                at.setDiaConta(jCDia.getSelectedItem().toString());
            at.setMesConta(jCMes.getSelectedItem().toString());
            at.setAnoConta(jCAno.getSelectedItem().toString());
                data = jCDia.getSelectedItem().toString();
       data = data+"/"+jCMes.getSelectedItem().toString();
        data = data+"/"+jCAno.getSelectedItem();toString();
           at.setVencimentoContas(data);
                at.setObsContas(jTObs.getText());
                at.setStatusContas(jCStatus.getSelectedItem().toString());
                dao.alteraConta(at);
                 JOptionPane.showMessageDialog(null,"Conta alterada com sucesso.","Alterar",JOptionPane.INFORMATION_MESSAGE);
                 listarContas();
                 desabilitaDados();
            }
        }
         }
            
         }
        
           public void impressaoConta() {
	 
	    // note que estamos chamando o novo relatório
	    InputStream inputStream = getClass().getResourceAsStream( "/Conta.jasper" );
	 
	    // mapa de parâmetros do relatório
	    Map parametros = new HashMap();
	 
	    /*
	     * Insere o parâmetro primeiroNome no mapa, com o valor F%
	     * ou seja, todos os clientes que tenham primeiro nome começando
	     * com a letra F.
	     */
	    parametros.put( "codigoConta", jTCodigo.getText() );
	 
	    // outros possíveis parâmetros aqui...
	 
	    try {
	 
	        // abre o relatório
	        Impressao.openReport( "Conta", inputStream, parametros,
	                ConexaoImpressao.getMindConnection() );
                
	  this.dispose();
	    } catch ( SQLException exc ) {
	        exc.printStackTrace();
	    } catch ( JRException exc ) {
	        exc.printStackTrace();
	    }
	 
	}
         public void desabilitaDados(){
        jTNome.setEditable(false);
        jTValor.setEditable(false);
         jCDia.setEnabled(false);
            jCMes.setEnabled(false);
            jCAno.setEnabled(false);
        jTObs.setEnabled(false);
        jCStatus.setEnabled(false);
            jBSalvar.setEnabled(false);
             jBExcluir.setEnabled(false);
            jBCancelar.setEnabled(false);
           jBImprimir.setEnabled(false);
           jBAlterar.setEnabled(false);
           jBNovo.setEnabled(true);
    }
   
   public void habilitaDados(){
       jTNome.setEditable(true);
        jTValor.setEditable(true);
        jCDia.setEnabled(true);
            jCMes.setEnabled(true);
            jCAno.setEnabled(true);
        jTObs.setEnabled(true);
        jCStatus.setEnabled(true);
            jBSalvar.setEnabled(true);
           jBCancelar.setEnabled(true);
           jBNovo.setEnabled(false);
   }
   
   public void limparDados(){
            jTCodigo.setText("");
            jTNome.setText("");
            jTValor.setText("");
           jCDia.setSelectedIndex(0);
            jCMes.setSelectedIndex(0);
            jCAno.setSelectedIndex(0);
            jTObs.setText("");
            jCStatus.setSelectedIndex(0);
            jLObrNome.setForeground(Color.black);
                jLObrVal.setForeground(Color.black);
                 jLObrDt.setForeground(Color.black);
                 jLObrStatus.setForeground(Color.black);
                 nome="";
                 valor="";
                 obs="";
        }
        
   protected void listarContas() throws SQLException{
        contaDao dao = new contaDao ();
        
        switch(jCBusca.getSelectedIndex()){
            case 0:
                 contas = dao.getListaDescricao("%" + jTBusca.getText() + "%");
        mostraPesquisa(contas);
                break;
              
            case 1:
                contas = dao.getListaCodigo(jTBusca.getText());
        mostraPesquisa(contas);
                break;
      
            case 2:
                contas = dao.getListaStatus("%" + jTBusca.getText() + "%");
        mostraPesquisa(contas);
                break;    
           
        }      
    }
   boolean msg = true;
   private void mostraPesquisa(List<atributos> contas) {
      while(tmContas.getRowCount()>0){
          tmContas.removeRow(0);
      }
        if(contas.isEmpty()){
            msg = false;
         
      }else{
            msg = true;
          String []linha = new String [] {null, null, null, null, null};
          for (int i = 0; i < contas.size(); i++){
              tmContas.addRow(linha);
              tmContas.setValueAt(contas.get(i).getCodigoContas(), i, 0);
              tmContas.setValueAt(contas.get(i).getDsContas(), i, 1);
              tmContas.setValueAt(contas.get(i).getValorContas(), i, 2);
              tmContas.setValueAt(contas.get(i).getVencimentoContas(), i, 3);
              tmContas.setValueAt(contas.get(i).getStatusContas(), i, 4);
            
          }
      }
    }
   int dados =0;
   
    //Os TextField recebem os dados selecionados no form Inicio
     public void recebeDados(atributos at){
       
          habilitaDados();
            jBSalvar.setEnabled(false);
            jBAlterar.setEnabled(true);
            jBImprimir.setEnabled(true);
            jBExcluir.setEnabled(true);
             jTCodigo.setText(String.valueOf(at.getCodigoContas()));
             jTNome.setText(at.getDsContas());
             jTValor.setText(at.getValorContas());
        jCDia.setSelectedItem(at.getDiaConta());
        jCMes.setSelectedItem(at.getMesConta());
        jCAno.setSelectedItem(at.getAnoConta());
        jLDtVencimento.setText(at.getVencimentoContas());
        jTObs.setText(at.getObsContas());
        jCStatus.setSelectedItem(at.getStatusContas());
         dados =1;
        
         }
   
     
     //Joga os dados selecionados nas TexfFields
   private void linhaSelecionada(JTable tabela){
          
        if(jTContas.getSelectedRow()!=-1){
            habilitaDados();
            jBSalvar.setEnabled(false);
            jBAlterar.setEnabled(true);
            jBImprimir.setEnabled(true);
            jBExcluir.setEnabled(true);
        jTCodigo.setText(String.valueOf(contas.get(tabela.getSelectedRow()).getCodigoContas()));
        jTNome.setText(contas.get(tabela.getSelectedRow()).getDsContas());
        jTValor.setText(contas.get(tabela.getSelectedRow()).getValorContas());
        jCDia.setSelectedItem(contas.get(tabela.getSelectedRow()).getDiaConta());
        jCMes.setSelectedItem(contas.get(tabela.getSelectedRow()).getMesConta());
        jCAno.setSelectedItem(contas.get(tabela.getSelectedRow()).getAnoConta());
        jLDtVencimento.setText(contas.get(tabela.getSelectedRow()).getVencimentoContas());
        jTObs.setText(contas.get(tabela.getSelectedRow()).getObsContas());
        jCStatus.setSelectedItem(contas.get(tabela.getSelectedRow()).getStatusContas());
        
        nome = jTNome.getText();
        valor = jTValor.getText();
        obs = jTObs.getText();
        jTConta.setSelectedComponent(jPContas);
        } else{
           limparDados();
       }
      
       jTBusca.setText("");
    }
   
   //Verifica se todo os dados obrigatórios foram preenchidos
        public boolean verificaDados(){
            if(jTNome.getText().equals("") || jTValor.getText().equals("") ||  
                    jCDia.getSelectedIndex()==0 ||
                jCMes.getSelectedIndex()==0 || jCAno.getSelectedIndex()==0 || 
                jLDtInvalida.getText().equals("Data inválida") || jCStatus.getSelectedIndex()==0){
                JOptionPane.showMessageDialog(null,"Há campos obrigatórios não preenchidos.","Atenção.",JOptionPane.WARNING_MESSAGE);
                
                //Muda a cor do marcador de campos obrigatórios
                 if(jCStatus.getSelectedIndex()==0){
                jLObrStatus.setForeground(Color.red);
                jCStatus.requestFocus();
            }else{
                jLObrStatus.setForeground(Color.black);
            }
                 if(jCDia.getSelectedIndex()==0){
                    jLObrDt.setForeground(Color.red);
                    jTConta.setSelectedComponent(jPContas);
                    jCDia.requestFocus();
                }else{
                     jLObrDt.setForeground(Color.black);
                }
                
                if(jCMes.getSelectedIndex()==0){
                    jLObrDt.setForeground(Color.red);
                    jTConta.setSelectedComponent(jPContas);
                    jCMes.requestFocus();
                }else{
                     jLObrDt.setForeground(Color.black);
                }
                
                if(jCAno.getSelectedIndex()==0){
                    jLObrDt.setForeground(Color.red);
                    jTConta.setSelectedComponent(jPContas);
                    jCAno.requestFocus();
                }else{
                     jLObrDt.setForeground(Color.black);
                }
                 
                if(jTValor.getText().equals("")){
                    jLObrVal.setForeground(Color.red);
                    jTValor.requestFocus();
                }else{
                    jLObrVal.setForeground(Color.black);
                }
                
                if(jTNome.getText().equals("")){
                    jLObrNome.setForeground(Color.red);
                    jTNome.requestFocus();
                }else{
                    jLObrNome.setForeground(Color.black);
                }
                return false;
            }else{
                jLObrNome.setForeground(Color.black);
                jLObrVal.setForeground(Color.black);
                 jLObrDt.setForeground(Color.black);
                 jLObrStatus.setForeground(Color.black);
                return true;
            }
        }
        
        //Verifica se a data é válida
        public void validaData(){

    if(jCDia.getSelectedIndex()!=0 && jCMes.getSelectedIndex()!=0 && jCAno.getSelectedIndex()!=0 ){
        int ano = Integer.parseInt(jCAno.getSelectedItem().toString()); 
          if(jCMes.getSelectedIndex()==2 && jCDia.getSelectedIndex()>29 ||(jCMes.getSelectedIndex()==4 && jCDia.getSelectedIndex()>30 ||jCMes.getSelectedIndex()==6 && jCDia.getSelectedIndex()>30
              ||jCMes.getSelectedIndex()==9 && jCDia.getSelectedIndex()>30 ||jCMes.getSelectedIndex()==11 && jCDia.getSelectedIndex()>30 
               ||jCDia.getSelectedIndex()==29 && jCMes.getSelectedIndex()==2 && ano%4!=0)){
           jLDtInvalida.setVisible(true);
           jLDtInvalida.setText("Data inválida");
           jLDtInvalida.setForeground(Color.RED);
       }else{
            jLDtInvalida.setText("");  
            jLDtInvalida.setVisible(false);
       }
    }else{
        jLDtInvalida.setText("");  
            jLDtInvalida.setVisible(false);
    }
  
}
        
         public void sair(){
             UIManager.put("OptionPane.noButtonText", "Não");  
         UIManager.put("OptionPane.yesButtonText", "Sim");
         int x = JOptionPane.showConfirmDialog(null, "Deseja encerrar o cadastro de contas?", "Alerta",0, 2);
        
        if (x==0) {
        this.dispose();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFContas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFContas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFContas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFContas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                JFContas dialog = null;
                try {
                    dialog = new JFContas(new javax.swing.JFrame(), true);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null,"Problema ao iniciar formulário de cadastro de contas\n"+ex);
                }
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAlterar;
    private javax.swing.JButton jBBusca;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBExcluir;
    private javax.swing.JButton jBImprimir;
    private javax.swing.JButton jBNovo;
    private javax.swing.JButton jBPesquisa;
    private javax.swing.JButton jBProximo;
    private javax.swing.JButton jBSalvar;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jCAno;
    private javax.swing.JComboBox jCBusca;
    private javax.swing.JComboBox jCDia;
    private javax.swing.JComboBox jCMes;
    private javax.swing.JComboBox jCStatus;
    private javax.swing.JLabel jLBusca;
    private javax.swing.JLabel jLCodigo;
    private javax.swing.JLabel jLDtInvalida;
    private javax.swing.JLabel jLDtVencimento;
    private javax.swing.JLabel jLNome;
    private javax.swing.JLabel jLObrDt;
    private javax.swing.JLabel jLObrNome;
    private javax.swing.JLabel jLObrStatus;
    private javax.swing.JLabel jLObrVal;
    private javax.swing.JLabel jLObs;
    private javax.swing.JLabel jLStatus;
    private javax.swing.JLabel jLValor;
    private javax.swing.JLabel jLVencimento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPBotoes;
    private javax.swing.JPanel jPContas;
    private javax.swing.JPanel jPDados;
    private javax.swing.JPanel jPPesquisa;
    private javax.swing.JScrollPane jSObs;
    private javax.swing.JScrollPane jSPesquisa;
    private javax.swing.JTextField jTBusca;
    private javax.swing.JTextField jTCodigo;
    private javax.swing.JTabbedPane jTConta;
    private javax.swing.JTable jTContas;
    private javax.swing.JTextField jTNome;
    private javax.swing.JTextArea jTObs;
    private javax.swing.JTextField jTValor;
    // End of variables declaration//GEN-END:variables
}
