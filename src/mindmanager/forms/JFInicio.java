package mindmanager.forms;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.List;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import mindmanager.bancodedados.criarConexao;
import mindmanager.dao.consultaDao;
import mindmanager.dao.contaDao;
import mindmanager.logica.atributos;

public class JFInicio extends javax.swing.JFrame {

     DefaultTableModel tmConsultas = new DefaultTableModel(null, new String []{"Horário","Paciente","Psicólogo(a)","Status","Pagamento"});
    List<atributos> consultas;
    ListSelectionModel lsmConsultas;
   
    
    DefaultTableModel tmContas = new DefaultTableModel(null, new String []{"Código","Descrição","Valor","Vencimento","Pagamento"});
    List<atributos> contas;
    ListSelectionModel lsmContas;
    
    private Connection conexao;
    Process proc;
   
    public JFInicio() throws SQLException {
        initComponents();
        listarConsultas();
        listarContas();
        this.conexao = criarConexao.getConexao(); 
        
        JFC_Backup.setFileFilter(new FileNameExtensionFilter(".sql", "sql"));
        JFC_Backup.setAcceptAllFileFilterUsed(false);
        JFC_Backup.setVisible(false);
         jTAtendimentos.getColumnModel().getColumn(0).setPreferredWidth(50); 
         jTAtendimentos.getColumnModel().getColumn(1).setPreferredWidth(150);  
         jTAtendimentos.getColumnModel().getColumn(2).setPreferredWidth(130); 
         jTAtendimentos.getColumnModel().getColumn(4).setPreferredWidth(60); 
         
         this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/mindmanager/imagens/logo_mindmanager(48x48).png")));
    }
    
    
    //Método que verifica o nível de usuário logado
       public void verificaNivel(atributos at){
           
         if(at.getNivelUsuario().equals("Secretário(a)")){
              jSSeparador7.setVisible(false);
              jMCadastrosUsuarios.setVisible(false);
              jSSeparador8.setVisible(false);
              jMLaudo.setVisible(false);  
              jMAnamnese.setVisible(false);
              jMBackup.setVisible(false);
           }else if(at.getNivelUsuario().equals("Psicólogo(a)")){
               jSSeparador7.setVisible(false);
               jMCadastrosUsuarios.setVisible(false);
               jMBackup.setVisible(false);
           }else{
               jSSeparador7.setVisible(true);
              jMCadastrosUsuarios.setVisible(true);
              jSSeparador8.setVisible(true);
              jMLaudo.setVisible(true);  
              jMAnamnese.setVisible(true);
              jMBackup.setVisible(true);
           }  
        
           this.setTitle("MindManager - "+at.getLogin());
       }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTInicio = new javax.swing.JTabbedPane();
        jPAtendimentos = new javax.swing.JPanel();
        jPConsultas = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTAtendimentos = new javax.swing.JTable();
        jBConsultar = new javax.swing.JButton();
        jLSelecione = new javax.swing.JLabel();
        jBConsultar1 = new javax.swing.JButton();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        jPContas = new javax.swing.JPanel();
        jPContas2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTContas = new javax.swing.JTable();
        jBNovaConta = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLAtestado = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLDeclaracao = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLPacientes = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        JFC_Backup = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        jMMenu = new javax.swing.JMenuBar();
        jMMindManager = new javax.swing.JMenu();
        jMAjuda = new javax.swing.JMenuItem();
        jMSobre = new javax.swing.JMenuItem();
        jMBackup = new javax.swing.JMenu();
        JB_Backup = new javax.swing.JMenuItem();
        jMRes = new javax.swing.JMenuItem();
        jSSeparador = new javax.swing.JPopupMenu.Separator();
        jFLogoff = new javax.swing.JMenuItem();
        jMSair = new javax.swing.JMenuItem();
        jMCadastros = new javax.swing.JMenu();
        jMCadastrosPacientes = new javax.swing.JMenuItem();
        jSSeparador5 = new javax.swing.JPopupMenu.Separator();
        jMCadastrosConvenios = new javax.swing.JMenuItem();
        jSSeparador6 = new javax.swing.JPopupMenu.Separator();
        jMCadastrosFuncionarios = new javax.swing.JMenuItem();
        jMCadastrosPsicologos = new javax.swing.JMenuItem();
        jSSeparador7 = new javax.swing.JPopupMenu.Separator();
        jMCadastrosUsuarios = new javax.swing.JMenuItem();
        jMConsultas = new javax.swing.JMenu();
        jMAgendamento = new javax.swing.JMenuItem();
        jMModelos = new javax.swing.JMenu();
        jMAtestado = new javax.swing.JMenuItem();
        jMDeclaracao = new javax.swing.JMenuItem();
        jSSeparador8 = new javax.swing.JPopupMenu.Separator();
        jMLaudo = new javax.swing.JMenuItem();
        jMAnamnese = new javax.swing.JMenuItem();
        jMClinica = new javax.swing.JMenu();
        jMContas = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        jPConsultas.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jTAtendimentos.setModel(tmConsultas);
        jTAtendimentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTAtendimentosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTAtendimentos);

        javax.swing.GroupLayout jPConsultasLayout = new javax.swing.GroupLayout(jPConsultas);
        jPConsultas.setLayout(jPConsultasLayout);
        jPConsultasLayout.setHorizontalGroup(
            jPConsultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPConsultasLayout.setVerticalGroup(
            jPConsultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
        );

        jBConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/Start-Menu-Search-icon (2).png"))); // NOI18N
        jBConsultar.setText("Pesquisar");
        jBConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConsultarActionPerformed(evt);
            }
        });

        jLSelecione.setText("Selecione a data:");

        jBConsultar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/Apps-date-icon (1).png"))); // NOI18N
        jBConsultar1.setText("Agendar");
        jBConsultar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConsultar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPAtendimentosLayout = new javax.swing.GroupLayout(jPAtendimentos);
        jPAtendimentos.setLayout(jPAtendimentosLayout);
        jPAtendimentosLayout.setHorizontalGroup(
            jPAtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPAtendimentosLayout.createSequentialGroup()
                .addGroup(jPAtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPAtendimentosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPConsultas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPAtendimentosLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLSelecione)
                        .addGap(34, 34, 34)
                        .addComponent(jCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addGroup(jPAtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jBConsultar, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                            .addComponent(jBConsultar1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPAtendimentosLayout.setVerticalGroup(
            jPAtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPAtendimentosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPAtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPAtendimentosLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jBConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBConsultar1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLSelecione))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPConsultas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        jTInicio.addTab("Atendimentos", jPAtendimentos);

        jPContas2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jTContas.setModel(tmContas);
        jTContas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTContasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTContas);

        javax.swing.GroupLayout jPContas2Layout = new javax.swing.GroupLayout(jPContas2);
        jPContas2.setLayout(jPContas2Layout);
        jPContas2Layout.setHorizontalGroup(
            jPContas2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
        );
        jPContas2Layout.setVerticalGroup(
            jPContas2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPContas2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                .addContainerGap())
        );

        jBNovaConta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/add (25x25).png"))); // NOI18N
        jBNovaConta.setText("  Nova Conta");
        jBNovaConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNovaContaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPContasLayout = new javax.swing.GroupLayout(jPContas);
        jPContas.setLayout(jPContasLayout);
        jPContasLayout.setHorizontalGroup(
            jPContasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPContasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPContasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPContas2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBNovaConta))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPContasLayout.setVerticalGroup(
            jPContasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPContasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBNovaConta, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPContas2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jTInicio.addTab("Contas", jPContas);

        getContentPane().add(jTInicio);
        jTInicio.setBounds(351, 90, 550, 440);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/logo_mindmanager (2).png"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(640, 10, 260, 90);

        jPanel1.setOpaque(false);

        jLAtestado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/atestado_72.png"))); // NOI18N
        jLAtestado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLAtestadoMouseClicked(evt);
            }
        });

        jLabel6.setText("Atestado");

        jLDeclaracao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/My-Documents-icon.png"))); // NOI18N
        jLDeclaracao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLDeclaracaoMouseClicked(evt);
            }
        });

        jLabel7.setText("Declaração");

        jLabel4.setText("Pacientes");

        jLPacientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/user_72.png"))); // NOI18N
        jLPacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLPacientesMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGap(45, 45, 45)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLAtestado)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLDeclaracao, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLPacientes)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLPacientes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(14, 14, 14)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLAtestado)
                .addGap(4, 4, 4)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLDeclaracao, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(27, 27, 27))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(-30, 50, 180, 420);

        JFC_Backup.setCurrentDirectory(new java.io.File("C:\\"));
            JFC_Backup.setDialogTitle("Abra o arquivo de backup");
            JFC_Backup.setFileFilter(null);
            getContentPane().add(JFC_Backup);
            JFC_Backup.setBounds(40, 40, 614, 397);

            jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/bg.jpg"))); // NOI18N
            getContentPane().add(jLabel1);
            jLabel1.setBounds(0, 0, 940, 580);

            jMMindManager.setText("MindManager");

            jMAjuda.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, java.awt.event.InputEvent.ALT_MASK));
            jMAjuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/help_16.png"))); // NOI18N
            jMAjuda.setText("Ajuda");
            jMAjuda.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMAjudaActionPerformed(evt);
                }
            });
            jMMindManager.add(jMAjuda);

            jMSobre.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, java.awt.event.InputEvent.ALT_MASK));
            jMSobre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/sobre_16.png"))); // NOI18N
            jMSobre.setText("Sobre");
            jMSobre.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMSobreActionPerformed(evt);
                }
            });
            jMMindManager.add(jMSobre);

            jMBackup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/backup.png"))); // NOI18N
            jMBackup.setText("Backup");

            JB_Backup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/backup.png"))); // NOI18N
            JB_Backup.setText("Exportar");
            JB_Backup.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    JB_BackupActionPerformed(evt);
                }
            });
            jMBackup.add(JB_Backup);

            jMRes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/restore.png"))); // NOI18N
            jMRes.setText("Importar");
            jMRes.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMResActionPerformed(evt);
                }
            });
            jMBackup.add(jMRes);

            jMMindManager.add(jMBackup);
            jMMindManager.add(jSSeparador);

            jFLogoff.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.ALT_MASK));
            jFLogoff.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/logoff_24.png"))); // NOI18N
            jFLogoff.setText("Logoff");
            jFLogoff.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jFLogoffActionPerformed(evt);
                }
            });
            jMMindManager.add(jFLogoff);

            jMSair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
            jMSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/sair_16.png"))); // NOI18N
            jMSair.setText("Sair");
            jMSair.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMSairActionPerformed(evt);
                }
            });
            jMMindManager.add(jMSair);

            jMMenu.add(jMMindManager);

            jMCadastros.setText("Cadastros");

            jMCadastrosPacientes.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.SHIFT_MASK));
            jMCadastrosPacientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/user_24.png"))); // NOI18N
            jMCadastrosPacientes.setLabel("Pacientes");
            jMCadastrosPacientes.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMCadastrosPacientesActionPerformed(evt);
                }
            });
            jMCadastros.add(jMCadastrosPacientes);
            jMCadastros.add(jSSeparador5);

            jMCadastrosConvenios.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_MASK));
            jMCadastrosConvenios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/convenio_24.png"))); // NOI18N
            jMCadastrosConvenios.setText("Convênios");
            jMCadastrosConvenios.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMCadastrosConveniosActionPerformed(evt);
                }
            });
            jMCadastros.add(jMCadastrosConvenios);
            jMCadastros.add(jSSeparador6);

            jMCadastrosFuncionarios.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.SHIFT_MASK));
            jMCadastrosFuncionarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/secret_24.png"))); // NOI18N
            jMCadastrosFuncionarios.setText("Funcionários");
            jMCadastrosFuncionarios.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMCadastrosFuncionariosActionPerformed(evt);
                }
            });
            jMCadastros.add(jMCadastrosFuncionarios);

            jMCadastrosPsicologos.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK));
            jMCadastrosPsicologos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/psicologo_24.png"))); // NOI18N
            jMCadastrosPsicologos.setText("Psicólogos");
            jMCadastrosPsicologos.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMCadastrosPsicologosActionPerformed(evt);
                }
            });
            jMCadastros.add(jMCadastrosPsicologos);
            jMCadastros.add(jSSeparador7);

            jMCadastrosUsuarios.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.SHIFT_MASK));
            jMCadastrosUsuarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/usuario_24.png"))); // NOI18N
            jMCadastrosUsuarios.setText("Usuários");
            jMCadastrosUsuarios.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMCadastrosUsuariosActionPerformed(evt);
                }
            });
            jMCadastros.add(jMCadastrosUsuarios);

            jMMenu.add(jMCadastros);

            jMConsultas.setText("Consultas");

            jMAgendamento.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.SHIFT_MASK));
            jMAgendamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/Apps-date-icon.png"))); // NOI18N
            jMAgendamento.setText("Agendamento");
            jMAgendamento.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMAgendamentoActionPerformed(evt);
                }
            });
            jMConsultas.add(jMAgendamento);

            jMMenu.add(jMConsultas);

            jMModelos.setText("Modelos");

            jMAtestado.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK));
            jMAtestado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/atestado_24.png"))); // NOI18N
            jMAtestado.setText("Atestado");
            jMAtestado.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMAtestadoActionPerformed(evt);
                }
            });
            jMModelos.add(jMAtestado);

            jMDeclaracao.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.SHIFT_MASK));
            jMDeclaracao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/declaracao_24.png"))); // NOI18N
            jMDeclaracao.setText("Declaração");
            jMDeclaracao.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMDeclaracaoActionPerformed(evt);
                }
            });
            jMModelos.add(jMDeclaracao);
            jMModelos.add(jSSeparador8);

            jMLaudo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.SHIFT_MASK));
            jMLaudo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/laudos_24.png"))); // NOI18N
            jMLaudo.setText("Laudo");
            jMLaudo.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMLaudoActionPerformed(evt);
                }
            });
            jMModelos.add(jMLaudo);

            jMAnamnese.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
            jMAnamnese.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/anam_24.png"))); // NOI18N
            jMAnamnese.setText("Anamnese");
            jMAnamnese.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMAnamneseActionPerformed(evt);
                }
            });
            jMModelos.add(jMAnamnese);

            jMMenu.add(jMModelos);

            jMClinica.setText("Clínica");

            jMContas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
            jMContas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/contas_24.png"))); // NOI18N
            jMContas.setText("Contas");
            jMContas.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMContasActionPerformed(evt);
                }
            });
            jMClinica.add(jMContas);

            jMMenu.add(jMClinica);

            setJMenuBar(jMMenu);

            java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
            setBounds((screenSize.width-942)/2, (screenSize.height-600)/2, 942, 600);
        }// </editor-fold>//GEN-END:initComponents

    private void jMAjudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMAjudaActionPerformed
  
        
                   String comando = "c:\\Backup\\Manual.pdf";   
try {  
    Runtime.getRuntime().exec("rundll32 SHELL32.DLL,ShellExec_RunDLL "+comando);   
} catch (IOException e) {  
    JOptionPane.showMessageDialog(null,"Erro ao abrir o manual de instruções.\nErro: "+e);
}  

            
//necessário já ter um leitor de pdf instalado
   }//GEN-LAST:event_jMAjudaActionPerformed

    private void jMSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMSobreActionPerformed
        JFSobre formsobre = new JFSobre(this, true);
        formsobre.setVisible(true);
    }//GEN-LAST:event_jMSobreActionPerformed

    private void jMSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMSairActionPerformed
        try {
            sair();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problema ao sair do programa.\n" + ex, "Erro", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jMSairActionPerformed

    private void jMCadastrosPacientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMCadastrosPacientesActionPerformed
        JFPacientes frmpac;
        try {
            frmpac = new JFPacientes(this, true);
            frmpac.setVisible(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro com o banco de dados ao abrir formulário cadastro de pacientes.\n" + ex);
        }

    }//GEN-LAST:event_jMCadastrosPacientesActionPerformed

    private void jMCadastrosConveniosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMCadastrosConveniosActionPerformed
        JFConvenios formcadastroconvenio;
        try {
            formcadastroconvenio = new JFConvenios(this, true);
            formcadastroconvenio.setVisible(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problema ao acessar formulário de cadastro de convênios.\n" + ex, "Erro", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jMCadastrosConveniosActionPerformed

    private void jMCadastrosFuncionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMCadastrosFuncionariosActionPerformed
        JFFuncionarios formcadastrofuncionario;
        try {
            formcadastrofuncionario = new JFFuncionarios(this, true);
            formcadastrofuncionario.setVisible(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problema ao acessar formulário de cadastro de funcionários.\n" + ex, "Erro", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jMCadastrosFuncionariosActionPerformed

    private void jMCadastrosPsicologosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMCadastrosPsicologosActionPerformed
        JFPsicologos formcadastropsicologo;
        try {
            formcadastropsicologo = new JFPsicologos(this, true);
            formcadastropsicologo.setVisible(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problema ao acessar formulário de cadastro de psicólogos.\n" + ex, "Erro", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jMCadastrosPsicologosActionPerformed

    private void jMCadastrosUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMCadastrosUsuariosActionPerformed
        try {
            JFUsuarios formuser = new JFUsuarios(this, true);
            formuser.setVisible(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro com o banco de dados ao abrir formulário cadastro de usuário.\n" + ex);
        }
    }//GEN-LAST:event_jMCadastrosUsuariosActionPerformed

    private void jMAgendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMAgendamentoActionPerformed
        JFConsultas formconsultas;
        try {
            formconsultas = new JFConsultas(this, true);
            formconsultas.setVisible(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problema ao acessar formulário de cadastro de consultas.\n" + ex, "Erro", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jMAgendamentoActionPerformed

    private void jMAtestadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMAtestadoActionPerformed
        JFAtestados form = new JFAtestados(this, true);
        form.setVisible(true);
    }//GEN-LAST:event_jMAtestadoActionPerformed

    private void jMDeclaracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMDeclaracaoActionPerformed
        JFDeclaracao form = new JFDeclaracao(this, true);
        form.setVisible(true);
    }//GEN-LAST:event_jMDeclaracaoActionPerformed

    private void jMLaudoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMLaudoActionPerformed
        JFLaudos form = new JFLaudos(this, true);
        form.setVisible(true);
    }//GEN-LAST:event_jMLaudoActionPerformed

    private void jMAnamneseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMAnamneseActionPerformed
        JFAnamnese form = new JFAnamnese(this, true);
        form.setVisible(true);
    }//GEN-LAST:event_jMAnamneseActionPerformed

    private void jMContasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMContasActionPerformed
        JFContas formcontas;
        try {
            formcontas = new JFContas(this, true);
            formcontas.setVisible(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problema ao acessar formulário de cadastro de contas.\n" + ex, "Erro", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jMContasActionPerformed

    private void jTAtendimentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTAtendimentosMouseClicked
        try {
            linhaSelecionadaConsultas(jTAtendimentos);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problema ao selecionar consulta.\n" + ex, "Erro", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jTAtendimentosMouseClicked

    private void jBConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConsultarActionPerformed
        try {
            listarConsultas();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas no botão de pesquisa.\n " + ex);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Nenhhuma consulta encontrada.\n " + e);
        }

        if (msg == false) {
            JOptionPane.showMessageDialog(null, "Nenhuma consulta agendada.","Consultas",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jBConsultarActionPerformed

    private void jBConsultar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConsultar1ActionPerformed
        JFConsultas formconsultas;
        try {
            formconsultas = new JFConsultas(this, true);
            formconsultas.setVisible(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problema ao acessar consultas.\n" + ex, "Erro", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jBConsultar1ActionPerformed

    private void jTContasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTContasMouseClicked
        try {
            linhaSelecionadaContas(jTContas);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problema ao acessar formulário de contas.\n" + ex, "Erro", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jTContasMouseClicked

    private void jBNovaContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNovaContaActionPerformed
        JFContas formcontas;
        try {
            formcontas = new JFContas(this, true);
            formcontas.setVisible(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problema acessar nova conta.\n" + ex, "Erro", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jBNovaContaActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            sair();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Problema ao sair do programa. \n"+ex);
        }
    }//GEN-LAST:event_formWindowClosing

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
         //Atualiza as consultas marcadas assim que a janela ganha foco
        try {
            listarConsultas();
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(null,"Problema ao atualizar consultas.\n"+ex,"Erro",JOptionPane.WARNING_MESSAGE);
        }
        
          //Atualiza as contas cadastradas assim que a janela ganha foco
        try {
            listarContas();
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(null,"Problema ao atualizar contas.\n"+ex,"Erro",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_formWindowGainedFocus

    private void jFLogoffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFLogoffActionPerformed
       try {
            logoff();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problema ao fazer logoff.\n" + ex, "Erro", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jFLogoffActionPerformed

    private void jLPacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLPacientesMouseClicked
         JFPacientes frmpac;
        try {
            frmpac = new JFPacientes(this, true);
            frmpac.setVisible(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro com o banco de dados ao abrir formulário cadastro de pacientes. \n" + ex);
        }
    }//GEN-LAST:event_jLPacientesMouseClicked

    private void jLAtestadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLAtestadoMouseClicked
         JFAtestados form = new JFAtestados(this, true);
        form.setVisible(true);
    }//GEN-LAST:event_jLAtestadoMouseClicked

    private void jLDeclaracaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLDeclaracaoMouseClicked
      JFDeclaracao form = new JFDeclaracao(this, true);
        form.setVisible(true);
    }//GEN-LAST:event_jLDeclaracaoMouseClicked

    private void JB_BackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JB_BackupActionPerformed
          // Botão Backup
        try {
String arquivo = null;

JFC_Backup.setVisible(true);                        

int result = JFC_Backup.showSaveDialog(null);

if(result == JFileChooser.APPROVE_OPTION){
arquivo = JFC_Backup.getSelectedFile().toString().concat(".sql");

File file = new File(arquivo); 

if(file.exists()){
   Object[] options = { "Sim", "Não" };
                int opcao = JOptionPane.showOptionDialog(null,"Este arquivo já existe. Deseja sobreescrever este arquivo?", "Atenção",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null,options, options[0]);
                    if (opcao == JOptionPane.YES_OPTION) {                
                        Runtime bck = Runtime.getRuntime();   
                        bck.exec("C:\\Backup\\mysqldump.exe -v -v -v --host=localhost --user=root --password=321 --port=3306 --protocol=tcp --force --allow-keywords --compress  --add-drop-table --default-character-set=latin1 --hex-blob  --result-file="+arquivo+" --databases mindmanager_bd");  
                        JOptionPane.showMessageDialog(null, "Backup realizado com sucesso.", "Backup", 1);
                    }else{
                        JB_BackupActionPerformed(evt);
                    }
}else{
 
                        Runtime bck = Runtime.getRuntime();   
                        bck.exec("C:\\Backup\\mysqldump.exe -v -v -v --host=localhost --user=root --password=321 --port=3306 --protocol=tcp --force --allow-keywords --compress  --add-drop-table --default-character-set=latin1 --hex-blob  --result-file="+arquivo+" --databases mindmanager_bd");  
                        JOptionPane.showMessageDialog(null, "Backup realizado com sucesso.", "Backup", 1);   
}

}
    
        } catch (Exception e) {
            
            JOptionPane.showMessageDialog(null,"Erro ao realizar backup.\nErro: "+e, "Erro", 2);
            
        }
        
        
    }//GEN-LAST:event_JB_BackupActionPerformed

    private void jMResActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMResActionPerformed
 
        try {
   JFC_Backup.setVisible(true);  
               String bd = "mindmanager_bd";
  int result = JFC_Backup.showOpenDialog(null); 
 
  if(result == JFileChooser.OPEN_DIALOG){
  
                File bkp;  
            bkp = JFC_Backup.getSelectedFile();  
           String arq = bkp.toString();  
                   
String[] cmd = new String[3];
               cmd[0] = "cmd.exe" ;
                cmd[1] = "/C" ;
                 cmd[2] = "c:\\Backup\\mysql --user=root --password=321 < "+arq ;
                 
         Runtime rt = Runtime.getRuntime();
            System.out.println("Execing " + cmd[0] + " " + cmd[1]);
            proc = rt.exec(cmd);
            
                        // Mensagens de erro
            Backup errorGobbler = new 
            Backup(proc.getErrorStream(), "ERROR");            
            
            // Mensagens de saída
            Backup outputGobbler = new 
            Backup(proc.getInputStream(), "OUTPUT");
                
            // kick them off
            errorGobbler.run();
            outputGobbler.run();
                                    
            // Mensagens de erro
            int exitVal = proc.waitFor();
      
       
                        if (exitVal == 0){  
                JOptionPane.showMessageDialog(null, "Backup restaurado com sucesso.","Parabéns",JOptionPane.INFORMATION_MESSAGE);  
            }  
            else{  
                JOptionPane.showMessageDialog(null, "Falha ao restaurar backup. \n Verifique se o caminho selecionado possui espaços.");  
            }
}
           
  
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Erro ao restaurar backup.\nErro: "+e, "Erro", 2);           
        }       
    }//GEN-LAST:event_jMResActionPerformed
    
     //Método que realiza a pesquisa de consultas
    protected void listarConsultas() throws SQLException{
        consultaDao dao = new consultaDao ();
       dataSelecionada(); 
                 consultas  = dao.getListaConsultaData(data);
        mostraPesquisaConsulta(consultas );
            
    }
    
    String data="";
    //Formata a data escolhida por dia/mês/ano
    public void dataSelecionada(){
        Calendar calendario = jCalendar1.getCalendar(); //RETORNA O CALENDARIO PARA EXTRAIR O QUE QUISER DA DATA  
     
        data=calendario.get(Calendar.DAY_OF_MONTH)+"/";
                    switch(+calendario.get(Calendar.MONTH)){
                        case 0:
                            data=data+"Janeiro/";
                            break;
                            case 1:
                            data=data+"Fevereiro/";
                            break;
                                
                            case 2: 
                            data=data+"Março/";
                            break;
                                
                            case 3:
                            data=data+"Abril/";
                            break;
                            
                            case 4:
                            data=data+"Maio/";
                            break;
                            
                            case 5:
                            data=data+"Junho/";
                            break;
                            
                            case 6:
                            data=data+"Julho/";
                            break;
                            
                            case 7:
                            data=data+"Agosto/";
                            break;
                            
                            case 8:
                            data=data+"Setembro/";
                            break;
                            
                            case 9:
                            data=data+"Outubro/";
                            break;
                            
                            case 10:
                            data=data+"Novembro/";
                            break;
                            case 11:
                            data=data+"Dezembro/";
                            break;                            
                    }
            
            data=data+calendario.get(Calendar.YEAR);    
    }
    
    boolean msg=true;//Varíável para guardar mensagem caso a pesquisa não retorne nada
        
         private void mostraPesquisaConsulta(List<atributos> consultas) {
      while(tmConsultas.getRowCount()>0){
          tmConsultas.removeRow(0);
      }
        if(consultas.isEmpty()){
            msg=false;
         
      }else{
            msg=true;
          String []linha = new String [] {null, null, null, null, null};
          for (int i = 0; i < consultas.size(); i++){
              tmConsultas.addRow(linha);
              tmConsultas.setValueAt(consultas.get(i).getHorarioConsulta(), i, 0);
              tmConsultas.setValueAt(consultas.get(i).getNomePacConsulta(), i, 1);
              tmConsultas.setValueAt(consultas.get(i).getPsicologoConsulta(), i, 2);
              tmConsultas.setValueAt(consultas.get(i).getStatusConsulta(), i, 3);
              tmConsultas.setValueAt(consultas.get(i).getStatusPagConsulta(), i, 4);
               
          }
      }
    }
         //String conta="";
         //Lista as contas cadastradas
         protected void listarContas() throws SQLException{
        contaDao dao = new contaDao ();
        
                contas = dao.getListaStatus("%");
        mostraPesquisa(contas); 
     
           
        }
            
    
         
         boolean msgConta = true;//Guarda mensagem se a pesquisa não retornar nada
         
         
   private void mostraPesquisa(List<atributos> contas) {
      while(tmContas.getRowCount()>0){
          tmContas.removeRow(0);
      }
        if(contas.isEmpty()){
            msgConta = false;
         
      }else{
            msgConta = true;
          String []linha = new String [] {null, null, null, null, null};
          for (int i = 0; i < contas.size(); i++){
              tmContas.addRow(linha);
              tmContas.setValueAt(contas.get(i).getCodigoContas(), i, 0);
              tmContas.setValueAt(contas.get(i).getDsContas(), i, 1);
              tmContas.setValueAt(contas.get(i).getValorContas(), i, 2);
              tmContas.setValueAt(contas.get(i).getVencimentoContas(), i, 3);
              tmContas.setValueAt(contas.get(i).getStatusContas(), i, 4);
            
          }
      }
    }
            //Joga os valores da conta selecionada para os Text Field no form Consultas
   private void linhaSelecionadaConsultas(JTable tabela) throws SQLException{
          
        if(jTAtendimentos.getSelectedRow()!=-1){
            atributos at = new atributos();
        at.setNomePacConsulta(consultas.get(tabela.getSelectedRow()).getNomePacConsulta());
        at.setSexoPacConsulta(consultas.get(tabela.getSelectedRow()).getSexoPacConsulta());
        at.setDataNascPacConsulta(consultas.get(tabela.getSelectedRow()).getDataNascPacConsulta());
        at.setCodigoConsulta(consultas.get(tabela.getSelectedRow()).getCodigoConsulta());
        at.setDiaConsulta(consultas.get(tabela.getSelectedRow()).getDiaConsulta());
        at.setMesConsulta(consultas.get(tabela.getSelectedRow()).getMesConsulta());
        at.setAnoConsulta(consultas.get(tabela.getSelectedRow()).getAnoConsulta());
        at.setDataConsulta(consultas.get(tabela.getSelectedRow()).getDataConsulta());
        at.setHoraConsulta(consultas.get(tabela.getSelectedRow()).getHoraConsulta());
        at.setMinutosConsulta(consultas.get(tabela.getSelectedRow()).getMinutosConsulta());
        at.setHorarioConsulta(consultas.get(tabela.getSelectedRow()).getHorarioConsulta());
        at.setPsicologoConsulta(consultas.get(tabela.getSelectedRow()).getPsicologoConsulta());
        at.setStatusConsulta(consultas.get(tabela.getSelectedRow()).getStatusConsulta());
        at.setValorConsulta(consultas.get(tabela.getSelectedRow()).getValorConsulta());
        at.setStatusPagConsulta(consultas.get(tabela.getSelectedRow()).getStatusPagConsulta());
        JFConsultas frm = new JFConsultas(this, true);
        frm.recebeDados(at);
        frm.setVisible(true);
        }
    }
   
   //Joga os valores da conta selecionada para os Text Field no form Contas
    private void linhaSelecionadaContas(JTable tabela) throws SQLException{
          
        if(jTContas.getSelectedRow()!=-1){
            atributos at = new atributos();
        at.setCodigoContas(contas.get(tabela.getSelectedRow()).getCodigoContas());
        at.setDsContas(contas.get(tabela.getSelectedRow()).getDsContas());
        at.setValorContas(contas.get(tabela.getSelectedRow()).getValorContas());
        at.setDiaConta(contas.get(tabela.getSelectedRow()).getDiaConta());
         at.setMesConta(contas.get(tabela.getSelectedRow()).getMesConta());
        at.setAnoConta(contas.get(tabela.getSelectedRow()).getAnoConta());
        at.setVencimentoContas(contas.get(tabela.getSelectedRow()).getVencimentoContas());
        at.setObsContas(contas.get(tabela.getSelectedRow()).getObsContas());
        at.setStatusContas(contas.get(tabela.getSelectedRow()).getStatusContas());
      
        JFContas frm = new JFContas(this, true);
        frm.recebeDados(at);
        frm.setVisible(true);
        }
    }
   
         
    
    //Faz logoff de usuário, retornando à tela de login
    public void logoff() throws SQLException{
        UIManager.put("OptionPane.noButtonText", "Não");  
         UIManager.put("OptionPane.yesButtonText", "Sim");
         int x = JOptionPane.showConfirmDialog(null, "Deseja fazer logoff deste usuário?", "Alerta",0, 2);
        
        if (x==0) {
            this.dispose();
        JFLogin frmlogin = new JFLogin();
        frmlogin.setVisible(true);
        
        }
    }
    
    //Encerra o programa
     public void sair() throws SQLException{
        UIManager.put("OptionPane.noButtonText", "Não");  
         UIManager.put("OptionPane.yesButtonText", "Sim");
         int x = JOptionPane.showConfirmDialog(null, "Deseja sair do programa?", "Alerta",0, 2);
        
        if (x==0) {
           System.exit(0);
        
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                try {
                    new JFInicio().setVisible(true);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null,"Problema ao carregar formulário inicial. \n"+ex,"Erro",JOptionPane.WARNING_MESSAGE);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem JB_Backup;
    private javax.swing.JFileChooser JFC_Backup;
    private javax.swing.JButton jBConsultar;
    private javax.swing.JButton jBConsultar1;
    private javax.swing.JButton jBNovaConta;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JMenuItem jFLogoff;
    private javax.swing.JLabel jLAtestado;
    private javax.swing.JLabel jLDeclaracao;
    private javax.swing.JLabel jLPacientes;
    private javax.swing.JLabel jLSelecione;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenuItem jMAgendamento;
    private javax.swing.JMenuItem jMAjuda;
    private javax.swing.JMenuItem jMAnamnese;
    private javax.swing.JMenuItem jMAtestado;
    private javax.swing.JMenu jMBackup;
    private javax.swing.JMenu jMCadastros;
    private javax.swing.JMenuItem jMCadastrosConvenios;
    private javax.swing.JMenuItem jMCadastrosFuncionarios;
    private javax.swing.JMenuItem jMCadastrosPacientes;
    private javax.swing.JMenuItem jMCadastrosPsicologos;
    private javax.swing.JMenuItem jMCadastrosUsuarios;
    private javax.swing.JMenu jMClinica;
    private javax.swing.JMenu jMConsultas;
    private javax.swing.JMenuItem jMContas;
    private javax.swing.JMenuItem jMDeclaracao;
    private javax.swing.JMenuItem jMLaudo;
    private javax.swing.JMenuBar jMMenu;
    private javax.swing.JMenu jMMindManager;
    private javax.swing.JMenu jMModelos;
    private javax.swing.JMenuItem jMRes;
    private javax.swing.JMenuItem jMSair;
    private javax.swing.JMenuItem jMSobre;
    private javax.swing.JPanel jPAtendimentos;
    private javax.swing.JPanel jPConsultas;
    private javax.swing.JPanel jPContas;
    private javax.swing.JPanel jPContas2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu.Separator jSSeparador;
    private javax.swing.JPopupMenu.Separator jSSeparador5;
    private javax.swing.JPopupMenu.Separator jSSeparador6;
    private javax.swing.JPopupMenu.Separator jSSeparador7;
    private javax.swing.JPopupMenu.Separator jSSeparador8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTAtendimentos;
    private javax.swing.JTable jTContas;
    private javax.swing.JTabbedPane jTInicio;
    // End of variables declaration//GEN-END:variables
}
