package mindmanager.forms;

import java.awt.Color;
import java.awt.Toolkit;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import mindmanager.bancodedados.ConexaoImpressao;
import mindmanager.bancodedados.criarConexao;
import mindmanager.dao.funcionarioDao;
import mindmanager.logica.Impressao;
import mindmanager.logica.atributos;
import net.sf.jasperreports.engine.JRException;

public class JFFuncionarios extends javax.swing.JDialog {

    private Connection conexao;
    /**
     * Creates new form NewJDialog
     */
    public JFFuncionarios(java.awt.Frame parent, boolean modal) throws SQLException {
        super(parent, modal);
        initComponents();
         this.conexao = criarConexao.getConexao();
         DateFormat dataa = new SimpleDateFormat("yyyy");
      Date date = new Date();
      String data = dataa.format(date);
        
         for(int i=Integer.valueOf(data)-16;i>=1887;i--){
                  jCAno.addItem(String.valueOf(i));
              }
         
          jTPesquisa.getColumnModel().getColumn(0).setPreferredWidth(50);  
         jTPesquisa.getColumnModel().getColumn(1).setPreferredWidth(200); 
          jTPesquisa.getColumnModel().getColumn(3).setPreferredWidth(130);
         
        listarFuncionarios();
         this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/mindmanager/imagens/logo_mindmanager(48x48).png")));
    }
    
     DefaultTableModel tmFuncionarios = new DefaultTableModel(null, new String []{"Código","Nome","CPF","Cargo","Salário","Status"});
    List<atributos> funcionarios;
    ListSelectionModel lsmFuncionarios;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTFuncionarios = new javax.swing.JTabbedPane();
        jPDados = new javax.swing.JPanel();
        jPDadosGerais = new javax.swing.JPanel();
        jLNacionalidade = new javax.swing.JLabel();
        jTSalario = new javax.swing.JTextField();
        jLSalario = new javax.swing.JLabel();
        jLCodigo = new javax.swing.JLabel();
        jLRg = new javax.swing.JLabel();
        jTCargo = new javax.swing.JTextField();
        jCSexo = new javax.swing.JComboBox();
        jLSexo = new javax.swing.JLabel();
        jTRg = new javax.swing.JTextField();
        jCEstadoCivil = new javax.swing.JComboBox();
        jSObs = new javax.swing.JScrollPane();
        jTObs = new javax.swing.JTextArea();
        jLCpf = new javax.swing.JLabel();
        jLDtNasc = new javax.swing.JLabel();
        jLNome = new javax.swing.JLabel();
        jTCodigo = new javax.swing.JTextField();
        jLEstadoCivil = new javax.swing.JLabel();
        jLCargo = new javax.swing.JLabel();
        jTNome = new javax.swing.JTextField();
        jLObs = new javax.swing.JLabel();
        jLStatus = new javax.swing.JLabel();
        jCStatus = new javax.swing.JComboBox();
        jCDia = new javax.swing.JComboBox();
        jCMes = new javax.swing.JComboBox();
        jCAno = new javax.swing.JComboBox();
        jTNacionalidade = new javax.swing.JTextField();
        jFTCpf = new javax.swing.JTextField();
        jLObrNome = new javax.swing.JLabel();
        jLObrSexo = new javax.swing.JLabel();
        jLObrDtNasc = new javax.swing.JLabel();
        jLObrRg = new javax.swing.JLabel();
        jLObrCpf = new javax.swing.JLabel();
        jLObrNac = new javax.swing.JLabel();
        jLObrEstCivil = new javax.swing.JLabel();
        jLObrCargo = new javax.swing.JLabel();
        jLObrSalario = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLDtInvalida = new javax.swing.JLabel();
        jLValidacao = new javax.swing.JLabel();
        jTDtNasc = new javax.swing.JLabel();
        jBProximo = new javax.swing.JButton();
        jPEnd = new javax.swing.JPanel();
        jPContato = new javax.swing.JPanel();
        jLTelRes = new javax.swing.JLabel();
        jLTelCom = new javax.swing.JLabel();
        jLCel = new javax.swing.JLabel();
        jLId = new javax.swing.JLabel();
        jLTelRec = new javax.swing.JLabel();
        jLEmail = new javax.swing.JLabel();
        jFTelRes = new javax.swing.JTextField();
        jFTelCom = new javax.swing.JTextField();
        jFCel = new javax.swing.JTextField();
        jFId = new javax.swing.JTextField();
        jFTelRec = new javax.swing.JTextField();
        jTEmail = new javax.swing.JTextField();
        jLObrContato = new javax.swing.JLabel();
        jPEndereco = new javax.swing.JPanel();
        jLRua = new javax.swing.JLabel();
        jLNumero = new javax.swing.JLabel();
        jLComplemento = new javax.swing.JLabel();
        jLBairro = new javax.swing.JLabel();
        jLUf = new javax.swing.JLabel();
        jTRua = new javax.swing.JTextField();
        jTNumero = new javax.swing.JTextField();
        jTComplemento = new javax.swing.JTextField();
        jTBairro = new javax.swing.JTextField();
        jLCidade = new javax.swing.JLabel();
        jTCidade = new javax.swing.JTextField();
        jCEstado = new javax.swing.JComboBox();
        jLPais = new javax.swing.JLabel();
        jTPais = new javax.swing.JTextField();
        jLCep = new javax.swing.JLabel();
        jFTCep = new javax.swing.JTextField();
        jLObrCep = new javax.swing.JLabel();
        jLObrRua = new javax.swing.JLabel();
        jLObrNum = new javax.swing.JLabel();
        jLObrBairro = new javax.swing.JLabel();
        jLObrCidade = new javax.swing.JLabel();
        jLObrUf = new javax.swing.JLabel();
        jLObrPais = new javax.swing.JLabel();
        jBAnterior = new javax.swing.JButton();
        jBProximo2 = new javax.swing.JButton();
        jPPesquisa = new javax.swing.JPanel();
        jPBusca = new javax.swing.JPanel();
        jSDados = new javax.swing.JScrollPane();
        jTPesquisa = new javax.swing.JTable();
        jLBusca = new javax.swing.JLabel();
        jCBusca = new javax.swing.JComboBox();
        jBPesquisar = new javax.swing.JButton();
        jTPesquisar = new javax.swing.JTextField();
        jBVoltar = new javax.swing.JButton();
        jPBotoes = new javax.swing.JPanel();
        jBAlterar = new javax.swing.JButton();
        jBSalvar = new javax.swing.JButton();
        jBCancelar = new javax.swing.JButton();
        jBImprimir = new javax.swing.JButton();
        jBNovo = new javax.swing.JButton();
        jBExcluir = new javax.swing.JButton();
        jBPesquisa = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Cadastro de Funcionários");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        jPDados.setLayout(null);

        jPDadosGerais.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLNacionalidade.setText("Nacionalidade:");

        jTSalario.setEditable(false);
        jTSalario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTSalarioKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTSalarioKeyReleased(evt);
            }
        });

        jLSalario.setText("Salário:");

        jLCodigo.setText("Código:");

        jLRg.setText("RG:");

        jTCargo.setEditable(false);
        jTCargo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTCargoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTCargoKeyReleased(evt);
            }
        });

        jCSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "F", "M" }));
        jCSexo.setEnabled(false);
        jCSexo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCSexoKeyPressed(evt);
            }
        });

        jLSexo.setText("Sexo:");

        jTRg.setEditable(false);
        jTRg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTRgKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTRgKeyReleased(evt);
            }
        });

        jCEstadoCivil.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Solteiro(a)", "Casado(a)", "Separado(a)", "Divorciado(a)", "Viúvo(a)" }));
        jCEstadoCivil.setEnabled(false);
        jCEstadoCivil.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCEstadoCivilKeyPressed(evt);
            }
        });

        jTObs.setColumns(20);
        jTObs.setRows(5);
        jTObs.setEnabled(false);
        jTObs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTObsKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTObsKeyReleased(evt);
            }
        });
        jSObs.setViewportView(jTObs);

        jLCpf.setText("CPF:");

        jLDtNasc.setText("Data de Nascimento:");

        jLNome.setText("Nome:");

        jTCodigo.setEditable(false);

        jLEstadoCivil.setText("Estado Civil:");

        jLCargo.setText("Cargo:");

        jTNome.setEditable(false);
        jTNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTNomeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTNomeKeyReleased(evt);
            }
        });

        jLObs.setText("Observações:");

        jLStatus.setText("Status da Contratação:");

        jCStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Efetivo", "Estagiário", "Demitido" }));
        jCStatus.setEnabled(false);
        jCStatus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCStatusKeyPressed(evt);
            }
        });

        jCDia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Dia", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        jCDia.setEnabled(false);
        jCDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCDiaActionPerformed(evt);
            }
        });
        jCDia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCDiaKeyPressed(evt);
            }
        });

        jCMes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mês", "Janeiro", "Fevereiro", "Março ", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro" }));
        jCMes.setEnabled(false);
        jCMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCMesActionPerformed(evt);
            }
        });
        jCMes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCMesKeyPressed(evt);
            }
        });

        jCAno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ano" }));
        jCAno.setEnabled(false);
        jCAno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCAnoActionPerformed(evt);
            }
        });
        jCAno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCAnoKeyPressed(evt);
            }
        });

        jTNacionalidade.setEditable(false);
        jTNacionalidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTNacionalidadeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTNacionalidadeKeyReleased(evt);
            }
        });

        jFTCpf.setEditable(false);
        jFTCpf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFTCpfKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFTCpfKeyReleased(evt);
            }
        });

        jLObrNome.setText("(*)");

        jLObrSexo.setText("(*)");

        jLObrDtNasc.setText("(*)");

        jLObrRg.setText("(*)");

        jLObrCpf.setText("(*)");

        jLObrNac.setText("(*)");

        jLObrEstCivil.setText("(*)");

        jLObrCargo.setText("(*)");

        jLObrSalario.setText("(*)");

        jLabel10.setText("(*)");

        jLDtInvalida.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLDtInvalida.setForeground(new java.awt.Color(255, 0, 51));

        jLValidacao.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jTDtNasc.setEnabled(false);

        jBProximo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/Arrow-Right-icon.png"))); // NOI18N
        jBProximo.setToolTipText("Próxima aba");
        jBProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBProximoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPDadosGeraisLayout = new javax.swing.GroupLayout(jPDadosGerais);
        jPDadosGerais.setLayout(jPDadosGeraisLayout);
        jPDadosGeraisLayout.setHorizontalGroup(
            jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDadosGeraisLayout.createSequentialGroup()
                .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPDadosGeraisLayout.createSequentialGroup()
                        .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPDadosGeraisLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPDadosGeraisLayout.createSequentialGroup()
                                        .addComponent(jLObrDtNasc)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLDtNasc)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jCDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(2, 2, 2)
                                        .addComponent(jCMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jCAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(8, 8, 8)
                                        .addComponent(jLDtInvalida, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPDadosGeraisLayout.createSequentialGroup()
                                        .addGap(70, 70, 70)
                                        .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPDadosGeraisLayout.createSequentialGroup()
                                                .addComponent(jLObrSexo)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLSexo)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jCSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jTDtNasc))
                                            .addGroup(jPDadosGeraisLayout.createSequentialGroup()
                                                .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(jPDadosGeraisLayout.createSequentialGroup()
                                                        .addComponent(jLObrNome)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(jLNome))
                                                    .addComponent(jLCodigo))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jTCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jTNome, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGroup(jPDadosGeraisLayout.createSequentialGroup()
                                        .addGap(35, 35, 35)
                                        .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPDadosGeraisLayout.createSequentialGroup()
                                                .addComponent(jLObrRg)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLRg)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTRg, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPDadosGeraisLayout.createSequentialGroup()
                                                .addComponent(jLObrCpf)
                                                .addGap(6, 6, 6)
                                                .addComponent(jLCpf)
                                                .addGap(4, 4, 4)
                                                .addComponent(jFTCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPDadosGeraisLayout.createSequentialGroup()
                                                .addComponent(jLObrNac)
                                                .addGap(6, 6, 6)
                                                .addComponent(jLNacionalidade)
                                                .addGap(4, 4, 4)
                                                .addComponent(jTNacionalidade, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPDadosGeraisLayout.createSequentialGroup()
                                                .addComponent(jLObrCargo)
                                                .addGap(6, 6, 6)
                                                .addComponent(jLCargo)
                                                .addGap(4, 4, 4)
                                                .addComponent(jTCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPDadosGeraisLayout.createSequentialGroup()
                                                .addComponent(jLObrEstCivil)
                                                .addGap(6, 6, 6)
                                                .addComponent(jLEstadoCivil)
                                                .addGap(4, 4, 4)
                                                .addComponent(jCEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPDadosGeraisLayout.createSequentialGroup()
                                                .addComponent(jLObrSalario)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLSalario)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTSalario, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLValidacao, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPDadosGeraisLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLStatus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPDadosGeraisLayout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(jLObs)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jSObs)))
                        .addGap(0, 152, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPDadosGeraisLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBProximo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPDadosGeraisLayout.setVerticalGroup(
            jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDadosGeraisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLCodigo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLNome)
                    .addComponent(jLObrNome)
                    .addComponent(jTNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPDadosGeraisLayout.createSequentialGroup()
                        .addComponent(jLObrSexo)
                        .addGap(3, 3, 3))
                    .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLSexo)
                        .addComponent(jTDtNasc)))
                .addGap(6, 6, 6)
                .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLDtNasc)
                        .addComponent(jLObrDtNasc)
                        .addComponent(jCAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPDadosGeraisLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLDtInvalida, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLRg)
                    .addComponent(jTRg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLObrRg))
                .addGap(3, 3, 3)
                .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jFTCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLValidacao, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPDadosGeraisLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLObrCpf)
                            .addComponent(jLCpf))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTNacionalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPDadosGeraisLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLObrNac)
                            .addComponent(jLNacionalidade))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPDadosGeraisLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLObrEstCivil)
                            .addComponent(jLEstadoCivil))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPDadosGeraisLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLObrCargo)
                            .addComponent(jLCargo))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLSalario)
                    .addComponent(jTSalario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLObrSalario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLStatus)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPDadosGeraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLObs)
                    .addComponent(jSObs, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jBProximo)
                .addContainerGap())
        );

        jPDados.add(jPDadosGerais);
        jPDadosGerais.setBounds(19, 11, 700, 460);

        jTFuncionarios.addTab("Dados Gerais", jPDados);

        jPContato.setBorder(javax.swing.BorderFactory.createTitledBorder("Contato"));

        jLTelRes.setText("Telefone Residencial:");

        jLTelCom.setText("Telefone Comercial:");

        jLCel.setText("Celular:");

        jLId.setText("ID:");

        jLTelRec.setText("Telefone Para Recado:");

        jLEmail.setText("E-mail:");

        jFTelRes.setEditable(false);
        jFTelRes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFTelResKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFTelResKeyReleased(evt);
            }
        });

        jFTelCom.setEditable(false);
        jFTelCom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFTelComKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFTelComKeyReleased(evt);
            }
        });

        jFCel.setEditable(false);
        jFCel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFCelKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFCelKeyReleased(evt);
            }
        });

        jFId.setEditable(false);
        jFId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFIdKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFIdKeyReleased(evt);
            }
        });

        jFTelRec.setEditable(false);
        jFTelRec.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFTelRecKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFTelRecKeyReleased(evt);
            }
        });

        jTEmail.setEditable(false);
        jTEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTEmailKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTEmailKeyReleased(evt);
            }
        });

        jLObrContato.setText("Preencha pelo menos um campo de contato");

        javax.swing.GroupLayout jPContatoLayout = new javax.swing.GroupLayout(jPContato);
        jPContato.setLayout(jPContatoLayout);
        jPContatoLayout.setHorizontalGroup(
            jPContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPContatoLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPContatoLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jLObrContato))
                    .addGroup(jPContatoLayout.createSequentialGroup()
                        .addGroup(jPContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLEmail)
                            .addComponent(jLTelRec)
                            .addComponent(jLId)
                            .addComponent(jLCel)
                            .addComponent(jLTelCom)
                            .addComponent(jLTelRes))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jFTelRes, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jFCel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jFId, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jFTelRec)
                            .addComponent(jFTelCom)
                            .addComponent(jTEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPContatoLayout.setVerticalGroup(
            jPContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPContatoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLObrContato)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(jPContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLTelRes)
                    .addComponent(jFTelRes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLTelCom)
                    .addComponent(jFTelCom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLCel)
                    .addComponent(jFCel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLId)
                    .addComponent(jFId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLTelRec)
                    .addComponent(jFTelRec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLEmail)
                    .addComponent(jTEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPEndereco.setBorder(javax.swing.BorderFactory.createTitledBorder("Endereço"));

        jLRua.setText("Logradouro:");

        jLNumero.setText("Número:");

        jLComplemento.setText("Complemento:");

        jLBairro.setText("Bairro:");

        jLUf.setText("UF:");

        jTRua.setEditable(false);
        jTRua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTRuaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTRuaKeyReleased(evt);
            }
        });

        jTNumero.setEditable(false);
        jTNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTNumeroKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTNumeroKeyReleased(evt);
            }
        });

        jTComplemento.setEditable(false);
        jTComplemento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTComplementoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTComplementoKeyReleased(evt);
            }
        });

        jTBairro.setEditable(false);
        jTBairro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTBairroKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTBairroKeyReleased(evt);
            }
        });

        jLCidade.setText("Cidade:");

        jTCidade.setEditable(false);
        jTCidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTCidadeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTCidadeKeyReleased(evt);
            }
        });

        jCEstado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AC", "AL", "AM", "AP", "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS", "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO" }));
        jCEstado.setEnabled(false);
        jCEstado.setFocusTraversalPolicyProvider(true);
        jCEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCEstadoActionPerformed(evt);
            }
        });
        jCEstado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCEstadoKeyPressed(evt);
            }
        });

        jLPais.setText("País:");

        jTPais.setEditable(false);
        jTPais.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTPaisKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTPaisKeyReleased(evt);
            }
        });

        jLCep.setText("CEP:");

        jFTCep.setEditable(false);
        jFTCep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFTCepKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFTCepKeyReleased(evt);
            }
        });

        jLObrCep.setText("(*)");

        jLObrRua.setText("(*)");

        jLObrNum.setText("(*)");

        jLObrBairro.setText("(*)");

        jLObrCidade.setText("(*)");

        jLObrUf.setText("(*)");

        jLObrPais.setText("(*)");

        javax.swing.GroupLayout jPEnderecoLayout = new javax.swing.GroupLayout(jPEndereco);
        jPEndereco.setLayout(jPEnderecoLayout);
        jPEnderecoLayout.setHorizontalGroup(
            jPEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPEnderecoLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLObrRua)
                .addGap(2, 2, 2)
                .addGroup(jPEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPEnderecoLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLObrPais)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLPais)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTPais, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPEnderecoLayout.createSequentialGroup()
                        .addGroup(jPEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLRua)
                            .addGroup(jPEnderecoLayout.createSequentialGroup()
                                .addComponent(jLObrUf)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLUf))
                            .addGroup(jPEnderecoLayout.createSequentialGroup()
                                .addComponent(jLObrBairro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLBairro)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPEnderecoLayout.createSequentialGroup()
                                .addComponent(jCEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLObrCep)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLCep)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jFTCep, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTRua, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPEnderecoLayout.createSequentialGroup()
                        .addGroup(jPEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPEnderecoLayout.createSequentialGroup()
                                .addComponent(jLObrNum)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLNumero)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTNumero))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPEnderecoLayout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(jTBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPEnderecoLayout.createSequentialGroup()
                                .addComponent(jLComplemento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPEnderecoLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLObrCidade)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLCidade)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPEnderecoLayout.setVerticalGroup(
            jPEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPEnderecoLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLCep)
                    .addComponent(jLObrCep)
                    .addComponent(jFTCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLUf)
                    .addComponent(jLObrUf)
                    .addComponent(jCEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLRua)
                    .addComponent(jLObrRua)
                    .addComponent(jTRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLBairro)
                    .addComponent(jLObrBairro)
                    .addComponent(jTBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLObrCidade)
                    .addComponent(jLCidade)
                    .addComponent(jTCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLNumero)
                    .addComponent(jLObrNum)
                    .addComponent(jTComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLComplemento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLPais)
                    .addComponent(jTPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLObrPais))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jBAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/Arrow-Right-icon2.png"))); // NOI18N
        jBAnterior.setToolTipText("Aba anterior");
        jBAnterior.setOpaque(false);
        jBAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAnteriorActionPerformed(evt);
            }
        });

        jBProximo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/Arrow-Right-icon.png"))); // NOI18N
        jBProximo2.setToolTipText("Próxima aba");
        jBProximo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBProximo2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPEndLayout = new javax.swing.GroupLayout(jPEnd);
        jPEnd.setLayout(jPEndLayout);
        jPEndLayout.setHorizontalGroup(
            jPEndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPEndLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPEndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPEndereco, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPContato, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(115, 115, 115)
                .addComponent(jBAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBProximo2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPEndLayout.setVerticalGroup(
            jPEndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPEndLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPEndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPEndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jBProximo2)
                        .addComponent(jBAnterior))
                    .addGroup(jPEndLayout.createSequentialGroup()
                        .addComponent(jPContato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jTFuncionarios.addTab("Endereço e Contato", jPEnd);

        jTPesquisa.setModel(tmFuncionarios);
        jTPesquisa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTPesquisaMouseClicked(evt);
            }
        });
        jSDados.setViewportView(jTPesquisa);

        jLBusca.setText("Busca por:");

        jCBusca.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nome", "Código", "CPF", "Cargo", "Salário", "Status" }));
        jCBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBuscaActionPerformed(evt);
            }
        });

        jBPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/Start-Menu-Search-icon.png"))); // NOI18N
        jBPesquisar.setText("Pesquisar");
        jBPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPesquisarActionPerformed(evt);
            }
        });

        jTPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTPesquisarKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPBuscaLayout = new javax.swing.GroupLayout(jPBusca);
        jPBusca.setLayout(jPBuscaLayout);
        jPBuscaLayout.setHorizontalGroup(
            jPBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBuscaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSDados, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 695, Short.MAX_VALUE)
                    .addGroup(jPBuscaLayout.createSequentialGroup()
                        .addComponent(jLBusca)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBPesquisar)))
                .addContainerGap())
        );
        jPBuscaLayout.setVerticalGroup(
            jPBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBuscaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLBusca)
                    .addComponent(jCBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBPesquisar)
                    .addComponent(jTPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSDados, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jBVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/Arrow-Right-icon2.png"))); // NOI18N
        jBVoltar.setToolTipText("Voltar à primeira aba");
        jBVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPPesquisaLayout = new javax.swing.GroupLayout(jPPesquisa);
        jPPesquisa.setLayout(jPPesquisaLayout);
        jPPesquisaLayout.setHorizontalGroup(
            jPPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPPesquisaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPBusca, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPPesquisaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPPesquisaLayout.setVerticalGroup(
            jPPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPPesquisaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBVoltar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTFuncionarios.addTab("Pesquisa", jPPesquisa);

        getContentPane().add(jTFuncionarios);
        jTFuncionarios.setBounds(20, 20, 740, 510);

        jPBotoes.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/pencil (25x25).png"))); // NOI18N
        jBAlterar.setText("Alterar");
        jBAlterar.setEnabled(false);
        jBAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlterarActionPerformed(evt);
            }
        });

        jBSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/disk (25x25).png"))); // NOI18N
        jBSalvar.setText("Salvar");
        jBSalvar.setEnabled(false);
        jBSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalvarActionPerformed(evt);
            }
        });

        jBCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/ico_delete.png"))); // NOI18N
        jBCancelar.setText("Cancelar");
        jBCancelar.setEnabled(false);
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jBImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/print-icon.png"))); // NOI18N
        jBImprimir.setText("Imprimir");
        jBImprimir.setEnabled(false);
        jBImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBImprimirActionPerformed(evt);
            }
        });

        jBNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/add (25x25).png"))); // NOI18N
        jBNovo.setText("Novo");
        jBNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNovoActionPerformed(evt);
            }
        });

        jBExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/lixo (25x25).png"))); // NOI18N
        jBExcluir.setText("Excluir");
        jBExcluir.setEnabled(false);
        jBExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirActionPerformed(evt);
            }
        });

        jBPesquisa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/Start-Menu-Search-icon (1).png"))); // NOI18N
        jBPesquisa.setText("Pesquisar");
        jBPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPesquisaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPBotoesLayout = new javax.swing.GroupLayout(jPBotoes);
        jPBotoes.setLayout(jPBotoesLayout);
        jPBotoesLayout.setHorizontalGroup(
            jPBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBotoesLayout.createSequentialGroup()
                .addGroup(jPBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPBotoesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jBPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPBotoesLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBNovo, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(jBSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPBotoesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(jBImprimir, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(jBCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPBotoesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jBExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPBotoesLayout.setVerticalGroup(
            jPBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jBSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jBImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jBCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPBotoes);
        jPBotoes.setBounds(780, 140, 154, 270);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("(*) -> Campos obrigatórios");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(780, 510, 160, 14);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/bg.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 970, 550);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-983)/2, (screenSize.height-586)/2, 983, 586);
    }// </editor-fold>//GEN-END:initComponents

    private void jTSalarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTSalarioKeyPressed
        if (evt.getKeyCode() == 10) {
            jCStatus.requestFocus();
        }

        if (evt.getKeyCode() == 16 || evt.getKeyCode() == 18) {
            jCStatus.requestFocus();
        }


        if (jTSalario.getText().length() < 10) {
            if (evt.getKeyCode() >= 48 && evt.getKeyCode() <= 57 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105
                    || evt.getKeyCode() == 8 || evt.getKeyCode() >= 37 && evt.getKeyCode() <= 40 || evt.getKeyCode() == 10
                    || evt.getKeyCode() == 46) {

                salario = jTSalario.getText();

                if (evt.getKeyCode() == 46) {
                    ponto++;
                }

                if (jTSalario.getText().length() == 0) {
                    if (evt.getKeyCode() == 46) {
                        ponto = 2;
                    }
                }

                if (evt.getKeyCode() == 46 && ponto >= 2) {
                    JOptionPane.showMessageDialog(this, "Digite apenas números.", "Atenção", JOptionPane.WARNING_MESSAGE);
                    jTSalario.setText("");
                    jTSalario.setText(salario);
                }

                if (!jTSalario.getText().contains(".")) {
                    ponto = 0;
                }


            } else {
                JOptionPane.showMessageDialog(this, "Digite apenas números.", "Atenção", JOptionPane.WARNING_MESSAGE);
                jTSalario.setText("");
                jTSalario.setText(salario);
            }

        } else {
            jTSalario.setText("");
            jTSalario.setText(salario);
        }

        if (jTSalario.getText().length() > 9) {
            if (evt.getKeyCode() != 10) {
                jTSalario.setText("");
                jTSalario.setText(salario);
            }

        }


        if (evt.getKeyCode() == 38) {
            //upperCase();
            jCEstadoCivil.requestFocus();
        }
    }//GEN-LAST:event_jTSalarioKeyPressed

    private void jTSalarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTSalarioKeyReleased
        if (jTSalario.getText().length() < 10) {
            if (evt.getKeyCode() >= 48 && evt.getKeyCode() <= 57 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105
                    || evt.getKeyCode() == 8 || evt.getKeyCode() >= 37 && evt.getKeyCode() <= 40 || evt.getKeyCode() == 10
                    || evt.getKeyCode() == 46) {

                salario = jTSalario.getText();


                if (evt.getKeyCode() == 46) {
                    ponto++;
                }

                if (jTSalario.getText().length() == 0) {
                    if (evt.getKeyCode() == 46) {
                        ponto = 2;
                    }
                }


                if (evt.getKeyCode() == 46 && ponto >= 2) {
                    JOptionPane.showMessageDialog(this, "Digite apenas números.", "Atenção", JOptionPane.WARNING_MESSAGE);
                    jTSalario.setText("");
                    jTSalario.setText(salario);
                }

                if (!jTSalario.getText().contains(".")) {
                    ponto = 0;

                }


            } else {
                JOptionPane.showMessageDialog(this, "Digite apenas números.", "Atenção", JOptionPane.WARNING_MESSAGE);
                jTSalario.setText("");
                jTSalario.setText(salario);
            }

        } else {
            jTSalario.setText("");
            jTSalario.setText(salario);
        }


        if (jTSalario.getText().length() > 9) {
            if (evt.getKeyCode() != 10) {
                jTSalario.setText("");
                jTSalario.setText(salario);
            }

        }
    }//GEN-LAST:event_jTSalarioKeyReleased

    private void jTCargoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTCargoKeyPressed
        if (evt.getKeyCode() == 10) {
            jTSalario.requestFocus();
        }

        if (jTCargo.getText().length() < 50) {


            cargo = jTCargo.getText();


        }

        if (jTCargo.getText().length() > 49) {
            if (evt.getKeyCode() != 10) {
                jTCargo.setText("");
                jTCargo.setText(cargo);
            }

        }

        if (evt.getKeyCode() == 38) {
            //upperCase();
            jCEstadoCivil.requestFocus();
        }
    }//GEN-LAST:event_jTCargoKeyPressed

    private void jTCargoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTCargoKeyReleased
        if (jTCargo.getText().length() < 50) {


            cargo = jTCargo.getText();


        }

        if (jTCargo.getText().length() > 49) {
            if (evt.getKeyCode() != 10) {
                jTCargo.setText("");
                jTCargo.setText(cargo);
            }

        }
    }//GEN-LAST:event_jTCargoKeyReleased

    private void jCSexoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCSexoKeyPressed
        if (evt.getKeyCode() == 10) {
            jCDia.requestFocus();
        }

        if (evt.getKeyCode() == 38) {
            //upperCase();
            jTNome.requestFocus();
        }
    }//GEN-LAST:event_jCSexoKeyPressed

    private void jTRgKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTRgKeyPressed
        if (evt.getKeyCode() == 38) {
            //upperCase();
            jCAno.requestFocus();
        }

        if (evt.getKeyCode() == 10) {
            jFTCpf.requestFocus();
        }


        if (jTRg.getText().length() < 15) {
            rg = jTRg.getText();
        }

        if (jTRg.getText().length() > 14) {
            if (evt.getKeyCode() != 10) {
                jTRg.setText("");
                jTRg.setText(rg);
            }

        }
    }//GEN-LAST:event_jTRgKeyPressed

    private void jTRgKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTRgKeyReleased
        if (jTRg.getText().length() < 15) {
            rg = jTRg.getText();
        }


        if (jTRg.getText().length() > 14) {
            if (evt.getKeyCode() != 10) {
                jTRg.setText("");
                jTRg.setText(rg);
            }

        }
    }//GEN-LAST:event_jTRgKeyReleased

    private void jCEstadoCivilKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCEstadoCivilKeyPressed
        if (evt.getKeyCode() == 10) {
            jTCargo.requestFocus();
        }

        if (evt.getKeyCode() == 38) {
            //upperCase();
            jTCargo.requestFocus();
        }
    }//GEN-LAST:event_jCEstadoCivilKeyPressed

    private void jTObsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTObsKeyPressed
        if (jTObs.getText().length() < 200) {
            obs = jTObs.getText();
        }


        if (jTObs.getText().length() > 199) {
            if (evt.getKeyCode() != 10) {
                jTObs.setText("");
                jTObs.setText(obs);
            }

        }
    }//GEN-LAST:event_jTObsKeyPressed

    private void jTObsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTObsKeyReleased
        if (jTObs.getText().length() < 200) {
            obs = jTObs.getText();
        }


        if (jTObs.getText().length() > 199) {
            if (evt.getKeyCode() != 10) {
                jTObs.setText("");
                jTObs.setText(obs);
            }

        }
    }//GEN-LAST:event_jTObsKeyReleased

    private void jTNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTNomeKeyPressed
        if (evt.getKeyCode() == 10) {
            jCSexo.requestFocus();
        }

        if (jTNome.getText().length() < 80) {

            nome = jTNome.getText();

        }

        if (jTNome.getText().length() > 79) {
            if (evt.getKeyCode() != 10) {
                jTNome.setText("");
                jTNome.setText(nome);
            }

        }
    }//GEN-LAST:event_jTNomeKeyPressed

    private void jTNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTNomeKeyReleased
        if (jTNome.getText().length() < 80) {


            nome = jTNome.getText();

        }

        if (jTNome.getText().length() > 79) {
            if (evt.getKeyCode() != 10) {
                jTNome.setText("");
                jTNome.setText(nome);
            }

        }
    }//GEN-LAST:event_jTNomeKeyReleased

    private void jCStatusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCStatusKeyPressed
        if (evt.getKeyCode() == 10) {
            jTCargo.requestFocus();
        }

        if (evt.getKeyCode() == 38) {
            upperCase();
            jTCargo.requestFocus();
        }
    }//GEN-LAST:event_jCStatusKeyPressed

    private void jCDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCDiaActionPerformed
        validaData();
    }//GEN-LAST:event_jCDiaActionPerformed

    private void jCDiaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCDiaKeyPressed

        if (evt.getKeyCode() == 10) {
            jCMes.requestFocus();
        }

        if (evt.getKeyCode() == 38) {
            jCSexo.requestFocus();
        }
    }//GEN-LAST:event_jCDiaKeyPressed

    private void jCMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCMesActionPerformed
        validaData();
    }//GEN-LAST:event_jCMesActionPerformed

    private void jCMesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCMesKeyPressed
        if (evt.getKeyCode() == 10) {
            jCAno.requestFocus();
        }

        if (evt.getKeyCode() == 38) {
            // upperCase();
            jCDia.requestFocus();
        }
    }//GEN-LAST:event_jCMesKeyPressed

    private void jCAnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCAnoActionPerformed
        validaData();
    }//GEN-LAST:event_jCAnoActionPerformed

    private void jCAnoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCAnoKeyPressed
        if (evt.getKeyCode() == 10) {
            jTRg.requestFocus();
        }

        if (evt.getKeyCode() == 38) {
            jCMes.requestFocus();
        }
    }//GEN-LAST:event_jCAnoKeyPressed

    private void jTNacionalidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTNacionalidadeKeyPressed
        if (evt.getKeyCode() == 10) {
            jCEstadoCivil.requestFocus();
        }

        if (jTNacionalidade.getText().length() < 30) {


            nac = jTNacionalidade.getText();


        }

        if (jTNacionalidade.getText().length() > 29) {
            if (evt.getKeyCode() != 10) {
                jTNacionalidade.setText("");
                jTNacionalidade.setText(nac);
            }

        }

        if (evt.getKeyCode() == 38) {
            //upperCase();
            jFTCpf.requestFocus();
        }
    }//GEN-LAST:event_jTNacionalidadeKeyPressed

    private void jTNacionalidadeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTNacionalidadeKeyReleased
        if (jTNacionalidade.getText().length() < 30) {


            nac = jTNacionalidade.getText();


        }

        if (jTNacionalidade.getText().length() > 29) {
            if (evt.getKeyCode() != 10) {
                jTNacionalidade.setText("");
                jTNacionalidade.setText(nac);
            }

        }
    }//GEN-LAST:event_jTNacionalidadeKeyReleased

    private void jFTCpfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTCpfKeyPressed
        //pula linha ao apertar shift ou alt
        if (evt.getKeyCode() == 16 || evt.getKeyCode() == 18) {
            jTNacionalidade.requestFocus();
        }

        if (jFTCpf.getText().length() <= 11) {

            jLValidacao.setVisible(false);
            if (evt.getKeyCode() >= 48 && evt.getKeyCode() <= 57 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105
                    || evt.getKeyCode() == 8 || evt.getKeyCode() >= 37 && evt.getKeyCode() <= 40 || evt.getKeyCode() == 10) {
                cpf = jFTCpf.getText();
                validaCPF();


            } else {
                JOptionPane.showMessageDialog(this, "Digite apenas números.", "Atenção", JOptionPane.WARNING_MESSAGE);
                validaCPF();
                jFTCpf.setText("");
                jFTCpf.setText(cpf);
            }
        } else {
            jFTCpf.setText("");
            jFTCpf.setText(cpf);
        }



        if (jFTCpf.getText().length() > 11) {
            if (evt.getKeyCode() != 10) {
                jFTCpf.setText("");
                jFTCpf.setText(cpf);

            }

        }
        //pula linha ao digitad enter
        if (evt.getKeyCode() == 10) {
            jTNacionalidade.requestFocus();
        }
        //sobe um campo ao pressionar a seta pra cima
        if (evt.getKeyCode() == 38) {
            //upperCase();
            jTRg.requestFocus();
        }
    }//GEN-LAST:event_jFTCpfKeyPressed

    private void jFTCpfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTCpfKeyReleased
        if (jFTCpf.getText().length() <= 11) {

            jLValidacao.setVisible(false);
            if (evt.getKeyCode() >= 48 && evt.getKeyCode() <= 57 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105
                    || evt.getKeyCode() == 8 || evt.getKeyCode() >= 37 && evt.getKeyCode() <= 40 || evt.getKeyCode() == 10) {//Impede que o usuário digite letras
                cpf = jFTCpf.getText();
                validaCPF();//mostra mensagem se o cpf é válido ou não


            } else {
                JOptionPane.showMessageDialog(this, "Digite apenas números.", "Atenção", JOptionPane.WARNING_MESSAGE);

                jFTCpf.setText("");
                jFTCpf.setText(cpf);
            }
        } else {
            jFTCpf.setText("");
            jFTCpf.setText(cpf);
        }


        //impede que o usuário digite mais digitos que o necessário
        if (jFTCpf.getText().length() > 11) {
            if (evt.getKeyCode() != 10) {
                validaCPF();
                jFTCpf.setText("");
                jFTCpf.setText(cpf);

            }

        }
    }//GEN-LAST:event_jFTCpfKeyReleased

    private void jBAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlterarActionPerformed
        try {
            upperCase();
            validaCPF();
            alteraFuncionario();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problema no botão alterar.");
        }
    }//GEN-LAST:event_jBAlterarActionPerformed

    private void jBSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalvarActionPerformed
        upperCase();
        validaCPF();
        try {
            cadastrarFuncionario();
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(null,"Problema no botão salvar.\n"+ex);
        }
    }//GEN-LAST:event_jBSalvarActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed

        limparDados();
        desabilitaDados();
        jTFuncionarios.setSelectedComponent(jPDados);
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jBImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBImprimirActionPerformed
        if (verificaDados()) {
           impressaoFuncionario();
        } else {
            JOptionPane.showMessageDialog(null, "Todos os campos obrigatórios devem ser preenchidos para impressão.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jBImprimirActionPerformed

    private void jBNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNovoActionPerformed

        habilitaDados();
        limparDados();
        jBAlterar.setEnabled(false);
        jTFuncionarios.setSelectedComponent(jPDados);
        jTNome.requestFocus();
    }//GEN-LAST:event_jBNovoActionPerformed

    private void jBExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirActionPerformed
        try {
            excluirFuncionario();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro no botão Excluir.\n" + ex);
        }
    }//GEN-LAST:event_jBExcluirActionPerformed

    private void jFTelResKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTelResKeyPressed
        if (evt.getKeyCode() == 16 || evt.getKeyCode() == 18) {
            jTRua.requestFocus();
        }
        if (jFTelRes.getText().length() <= 14) {
            if (evt.getKeyCode() >= 48 && evt.getKeyCode() <= 57 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105
                    || evt.getKeyCode() == 8 || evt.getKeyCode() >= 37 && evt.getKeyCode() <= 40 || evt.getKeyCode() == 10) {
                tel = jFTelRes.getText();
                if (jFTelRes.getText().length() == 0) {
                    if (evt.getKeyCode() != 8) {
                        tel = jFTelRes.getText();
                        jFTelRes.setText("(" + tel);
                    }

                } else if (jFTelRes.getText().length() == 4 && !jFTelRes.getText().contains(")")) {
                    if (evt.getKeyCode() != 8) {
                        tel = jFTelRes.getText();
                        jFTelRes.setText(tel + ")");
                    }
                } else if (jFTelRes.getText().length() == 5 && jFTelRes.getText().contains(")")) {
                    if (evt.getKeyCode() != 8) {
                        tel = jFTelRes.getText();
                        jFTelRes.setText(tel);
                    }
                } else if (jFTelRes.getText().length() == 9) {
                    if (evt.getKeyCode() != 8) {
                        tel = jFTelRes.getText();
                        jFTelRes.setText(tel + "-");
                    }
                }
                tel = jFTelRes.getText();
            } else {
                JOptionPane.showMessageDialog(this, "Digite apenas números.", "Atenção", JOptionPane.WARNING_MESSAGE);
                jFTelRes.setText("");
                jFTelRes.setText(tel);
            }
        } else {
            jFTelRes.setText("");
            jFTelRes.setText(tel);
        }




        if (jFTelRes.getText().length() > 14 || jFTelRes.getText().length() > 0 && jFTelRes.getText().charAt(0) == '(') {
            if (evt.getKeyCode() != 10 || evt.getKeyCode() != 8) {
                jFTelRes.setText("");
                jFTelRes.setText(tel);
            }

        }

        if (evt.getKeyCode() == 10) {
            jFTelCom.requestFocus();
        }

        if (evt.getKeyCode() == 38) {
            jTObs.requestFocus();
            jTFuncionarios.setSelectedComponent(jPDados);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jFTelResKeyPressed

    private void jFTelResKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTelResKeyReleased
        if (jFTelRes.getText().length() <= 14) {
            if (evt.getKeyCode() >= 48 && evt.getKeyCode() <= 57 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105
                    || evt.getKeyCode() == 8 || evt.getKeyCode() >= 37 && evt.getKeyCode() <= 40 || evt.getKeyCode() == 10) {
                tel = jFTelRes.getText();
                if (jFTelRes.getText().length() == 0) {
                    if (evt.getKeyCode() != 8 || evt.getKeyCode() != 10) {
                        tel = jFTelRes.getText();
                        jFTelRes.setText("(" + tel);
                    }

                } else if (jFTelRes.getText().length() == 4 && !jFTelRes.getText().contains(")")) {
                    if (evt.getKeyCode() != 8) {
                        tel = jFTelRes.getText();
                        jFTelRes.setText(tel + ")");
                    }
                } else if (jFTelRes.getText().length() == 5 && jFTelRes.getText().contains(")")) {
                    if (evt.getKeyCode() != 8) {
                        tel = jFTelRes.getText();
                        jFTelRes.setText(tel);
                    }
                } else if (jFTelRes.getText().length() == 9) {
                    if (evt.getKeyCode() != 8) {
                        tel = jFTelRes.getText();
                        jFTelRes.setText(tel + "-");
                    }
                }
                tel = jFTelRes.getText();
            } else {
                jFTelRes.setText("");
                jFTelRes.setText(tel);
            }
        } else {
            jFTelRes.setText("");
            jFTelRes.setText(tel);
        }




        if (jFTelRes.getText().length() > 14 || jFTelRes.getText().length() > 0 && jFTelRes.getText().charAt(0) == '(') {
            if (evt.getKeyCode() != 10 || evt.getKeyCode() != 8) {
                jFTelRes.setText("");
                jFTelRes.setText(tel);
            }

        }
    }//GEN-LAST:event_jFTelResKeyReleased

    private void jFTelComKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTelComKeyPressed
        if (evt.getKeyCode() == 16 || evt.getKeyCode() == 18) {
            jTRua.requestFocus();
        }
        if (jFTelCom.getText().length() <= 14) {
            if (evt.getKeyCode() >= 48 && evt.getKeyCode() <= 57 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105
                    || evt.getKeyCode() == 8 || evt.getKeyCode() >= 37 && evt.getKeyCode() <= 40 || evt.getKeyCode() == 10) {
                telCom = jFTelCom.getText();
                if (jFTelCom.getText().length() == 0) {
                    if (evt.getKeyCode() != 8) {
                        telCom = jFTelCom.getText();
                        jFTelCom.setText("(" + telCom);
                    }

                } else if (jFTelCom.getText().length() == 4 && !jFTelCom.getText().contains(")")) {
                    if (evt.getKeyCode() != 8) {
                        telCom = jFTelCom.getText();
                        jFTelCom.setText(telCom + ")");
                    }
                } else if (jFTelCom.getText().length() == 5 && jFTelCom.getText().contains(")")) {
                    if (evt.getKeyCode() != 8) {
                        telCom = jFTelCom.getText();
                        jFTelCom.setText(telCom);
                    }
                } else if (jFTelCom.getText().length() == 9) {
                    if (evt.getKeyCode() != 8) {
                        telCom = jFTelCom.getText();
                        jFTelCom.setText(telCom + "-");
                    }
                }
                telCom = jFTelCom.getText();
            } else {
                JOptionPane.showMessageDialog(this, "Digite apenas números.", "Atenção", JOptionPane.WARNING_MESSAGE);
                jFTelCom.setText("");
                jFTelCom.setText(telCom);
            }
        } else {
            jFTelCom.setText("");
            jFTelCom.setText(telCom);
        }




        if (jFTelCom.getText().length() > 14 || jFTelCom.getText().length() > 0 && jFTelCom.getText().charAt(0) == '(') {
            if (evt.getKeyCode() != 10 || evt.getKeyCode() != 8) {
                jFTelCom.setText("");
                jFTelCom.setText(telCom);
            }

        }

        if (evt.getKeyCode() == 10) {
            jFCel.requestFocus();
        }

        if (evt.getKeyCode() == 38) {
            jFTelRes.requestFocus();
        }
    }//GEN-LAST:event_jFTelComKeyPressed

    private void jFTelComKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTelComKeyReleased
        if (jFTelCom.getText().length() <= 14) {
            if (evt.getKeyCode() >= 48 && evt.getKeyCode() <= 57 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105
                    || evt.getKeyCode() == 8 || evt.getKeyCode() >= 37 && evt.getKeyCode() <= 40 || evt.getKeyCode() == 10) {
                telCom = jFTelCom.getText();
                if (jFTelCom.getText().length() == 0) {
                    if (evt.getKeyCode() != 8) {
                        telCom = jFTelCom.getText();
                        jFTelCom.setText("(" + telCom);
                    }

                } else if (jFTelCom.getText().length() == 4 && !jFTelCom.getText().contains(")")) {
                    if (evt.getKeyCode() != 8) {
                        telCom = jFTelCom.getText();
                        jFTelCom.setText(telCom + ")");
                    }
                } else if (jFTelCom.getText().length() == 5 && jFTelCom.getText().contains(")")) {
                    if (evt.getKeyCode() != 8) {
                        telCom = jFTelCom.getText();
                        jFTelCom.setText(telCom);
                    }
                } else if (jFTelCom.getText().length() == 9) {
                    if (evt.getKeyCode() != 8) {
                        telCom = jFTelCom.getText();
                        jFTelCom.setText(telCom + "-");
                    }
                }
                telCom = jFTelCom.getText();
            } else {
                jFTelCom.setText("");
                jFTelCom.setText(telCom);
            }
        } else {
            jFTelCom.setText("");
            jFTelCom.setText(telCom);
        }




        if (jFTelCom.getText().length() > 14 || jFTelCom.getText().length() > 0 && jFTelCom.getText().charAt(0) == '(') {
            if (evt.getKeyCode() != 10 || evt.getKeyCode() != 8) {
                jFTelCom.setText("");
                jFTelCom.setText(telCom);
            }

        }
    }//GEN-LAST:event_jFTelComKeyReleased

    private void jFCelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFCelKeyPressed
        if (evt.getKeyCode() == 16 || evt.getKeyCode() == 18) {
            jTRua.requestFocus();
        }
        if (jFCel.getText().length() <= 15) {
            if (evt.getKeyCode() >= 48 && evt.getKeyCode() <= 57 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105
                    || evt.getKeyCode() == 8 || evt.getKeyCode() >= 37 && evt.getKeyCode() <= 40 || evt.getKeyCode() == 10) {
                cel = jFCel.getText();
                if (jFCel.getText().length() == 0) {
                    if (evt.getKeyCode() != 8) {
                        cel = jFCel.getText();
                        jFCel.setText("(" + cel);
                    }

                } else if (jFCel.getText().length() == 4 && !jFCel.getText().contains(")")) {
                    if (evt.getKeyCode() != 8) {
                        cel = jFCel.getText();
                        jFCel.setText(cel + ")");
                    }
                } else if (jFCel.getText().length() == 5 && jFCel.getText().contains(")")) {
                    if (evt.getKeyCode() != 8) {
                        cel = jFCel.getText();
                        jFCel.setText(cel);
                    }
                } else if (jFCel.getText().length() == 9) {
                    if (evt.getKeyCode() != 8) {
                        cel = jFCel.getText();
                        jFCel.setText(cel + "-");
                    }
                }
                cel = jFCel.getText();
            } else {
                JOptionPane.showMessageDialog(this, "Digite apenas números.", "Atenção", JOptionPane.WARNING_MESSAGE);
                jFCel.setText("");
                jFCel.setText(cel);
            }
        } else {
            jFCel.setText("");
            jFCel.setText(cel);
        }




        if (jFCel.getText().length() > 15 || jFCel.getText().length() > 0 && jFCel.getText().charAt(0) == '(') {
            if (evt.getKeyCode() != 10 || evt.getKeyCode() != 8) {
                jFCel.setText("");
                jFCel.setText(cel);
            }

        }

        if (evt.getKeyCode() == 10) {
            jFId.requestFocus();
        }

        if (evt.getKeyCode() == 38) {
            jFTelCom.requestFocus();
        }
    }//GEN-LAST:event_jFCelKeyPressed

    private void jFCelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFCelKeyReleased
        if (jFCel.getText().length() <= 15) {
            if (evt.getKeyCode() >= 48 && evt.getKeyCode() <= 57 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105
                    || evt.getKeyCode() == 8 || evt.getKeyCode() >= 37 && evt.getKeyCode() <= 40 || evt.getKeyCode() == 10) {
                cel = jFCel.getText();
                if (jFCel.getText().length() == 0) {
                    if (evt.getKeyCode() != 8) {
                        cel = jFCel.getText();
                        jFCel.setText("(" + cel);
                    }

                } else if (jFCel.getText().length() == 4 && !jFCel.getText().contains(")")) {
                    if (evt.getKeyCode() != 8) {
                        cel = jFCel.getText();
                        jFCel.setText(cel + ")");
                    }
                } else if (jFCel.getText().length() == 5 && jFCel.getText().contains(")")) {
                    if (evt.getKeyCode() != 8) {
                        cel = jFCel.getText();
                        jFCel.setText(cel);
                    }
                } else if (jFCel.getText().length() == 9) {
                    if (evt.getKeyCode() != 8) {
                        cel = jFCel.getText();
                        jFCel.setText(cel + "-");
                    }
                }
                cel = jFCel.getText();
            } else {
                jFCel.setText("");
                jFCel.setText(cel);
            }
        } else {
            jFCel.setText("");
            jFCel.setText(cel);
        }




        if (jFCel.getText().length() > 15 || jFCel.getText().length() > 0 && jFCel.getText().charAt(0) == '(') {
            if (evt.getKeyCode() != 10 || evt.getKeyCode() != 8) {
                jFCel.setText("");
                jFCel.setText(cel);
            }

        }
    }//GEN-LAST:event_jFCelKeyReleased

    private void jFIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFIdKeyPressed
        if (evt.getKeyCode() == 18) {
            jTRua.requestFocus();
        }
        if (jFId.getText().length() < 20) {
            if (evt.getKeyCode() >= 48 && evt.getKeyCode() <= 57 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105
                    || evt.getKeyCode() == 8 || evt.getKeyCode() == 10 || evt.getKeyCode() == 38 || evt.getKeyCode() == 16) {
                id = jFId.getText();
            } else {
                JOptionPane.showMessageDialog(this, "Digite apenas números.", "Atenção", JOptionPane.WARNING_MESSAGE);
                jFId.setText("");
                jFId.setText(id);
            }
        }

        if (jFId.getText().length() > 19) {
            if (evt.getKeyCode() != 10) {
                jFId.setText("");
                jFId.setText(id);
            }
        }


        if (evt.getKeyCode() == 10) {
            jFTelRec.requestFocus();
        }

        if (evt.getKeyCode() == 38) {
            jFCel.requestFocus();
        }
    }//GEN-LAST:event_jFIdKeyPressed

    private void jFIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFIdKeyReleased

        if (jFId.getText().length() < 20) {
            if (evt.getKeyCode() >= 48 && evt.getKeyCode() <= 57 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105
                    || evt.getKeyCode() == 8 || evt.getKeyCode() == 10 || evt.getKeyCode() == 38 || evt.getKeyCode() == 16) {
                id = jFId.getText();
            } else {
                JOptionPane.showMessageDialog(this, "Digite apenas números.", "Atenção", JOptionPane.WARNING_MESSAGE);
                jFId.setText("");
                jFId.setText(id);
            }
        }

        if (jFId.getText().length() > 19) {
            if (evt.getKeyCode() != 10) {
                jFId.setText("");
                jFId.setText(id);
            }
        }
    }//GEN-LAST:event_jFIdKeyReleased

    private void jFTelRecKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTelRecKeyPressed
        if (evt.getKeyCode() == 16 || evt.getKeyCode() == 18) {
            jTRua.requestFocus();
        }
        if (jFTelRec.getText().length() <= 14) {
            if (evt.getKeyCode() >= 48 && evt.getKeyCode() <= 57 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105
                    || evt.getKeyCode() == 8 || evt.getKeyCode() >= 37 && evt.getKeyCode() <= 40 || evt.getKeyCode() == 10) {
                telRec = jFTelRec.getText();
                if (jFTelRec.getText().length() == 0) {
                    if (evt.getKeyCode() != 8) {
                        telRec = jFTelRec.getText();
                        jFTelRec.setText("(" + telRec);
                    }

                } else if (jFTelRec.getText().length() == 4 && !jFTelRec.getText().contains(")")) {
                    if (evt.getKeyCode() != 8) {
                        telRec = jFTelRec.getText();
                        jFTelRec.setText(telRec + ")");
                    }
                } else if (jFTelRec.getText().length() == 5 && jFTelRec.getText().contains(")")) {
                    if (evt.getKeyCode() != 8) {
                        telRec = jFTelRec.getText();
                        jFTelRec.setText(telRec);
                    }
                } else if (jFTelRec.getText().length() == 9) {
                    if (evt.getKeyCode() != 8) {
                        telRec = jFTelRec.getText();
                        jFTelRec.setText(telRec + "-");
                    }
                }
                telRec = jFTelRec.getText();
            } else {
                JOptionPane.showMessageDialog(this, "Digite apenas números.", "Atenção", JOptionPane.WARNING_MESSAGE);
                jFTelRec.setText("");
                jFTelRec.setText(telRec);
            }
        } else {
            jFTelRec.setText("");
            jFTelRec.setText(telRec);
        }




        if (jFTelRec.getText().length() > 14 || jFTelRec.getText().length() > 0 && jFTelRec.getText().charAt(0) == '(') {
            if (evt.getKeyCode() != 10 || evt.getKeyCode() != 8) {
                jFTelRec.setText("");
                jFTelRec.setText(telRec);
            }

        }

        if (evt.getKeyCode() == 10) {

            jTEmail.requestFocus();
        }

        if (evt.getKeyCode() == 38) {

            jFId.requestFocus();
        }
    }//GEN-LAST:event_jFTelRecKeyPressed

    private void jFTelRecKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTelRecKeyReleased
        if (jFTelRec.getText().length() <= 14) {
            if (evt.getKeyCode() >= 48 && evt.getKeyCode() <= 57 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105
                    || evt.getKeyCode() == 8 || evt.getKeyCode() >= 37 && evt.getKeyCode() <= 40 || evt.getKeyCode() == 10) {
                telRec = jFTelRec.getText();
                if (jFTelRec.getText().length() == 0) {
                    if (evt.getKeyCode() != 8) {
                        telRec = jFTelRec.getText();
                        jFTelRec.setText("(" + telRec);
                    }

                } else if (jFTelRec.getText().length() == 4 && !jFTelRec.getText().contains(")")) {
                    if (evt.getKeyCode() != 8) {
                        telRec = jFTelRec.getText();
                        jFTelRec.setText(telRec + ")");
                    }
                } else if (jFTelRec.getText().length() == 5 && jFTelRec.getText().contains(")")) {
                    if (evt.getKeyCode() != 8) {
                        telRec = jFTelRec.getText();
                        jFTelRec.setText(telRec);
                    }
                } else if (jFTelRec.getText().length() == 9) {
                    if (evt.getKeyCode() != 8) {
                        telRec = jFTelRec.getText();
                        jFTelRec.setText(telRec + "-");
                    }
                }
                telRec = jFTelRec.getText();
            } else {
                jFTelRec.setText("");
                jFTelRec.setText(telRec);
            }
        } else {
            jFTelRec.setText("");
            jFTelRec.setText(telRec);
        }




        if (jFTelRec.getText().length() > 14 || jFTelRec.getText().length() > 0 && jFTelRec.getText().charAt(0) == '(') {
            if (evt.getKeyCode() != 10 || evt.getKeyCode() != 8) {
                jFTelRec.setText("");
                jFTelRec.setText(telRec);
            }

        }
    }//GEN-LAST:event_jFTelRecKeyReleased

    private void jTEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTEmailKeyPressed
        if (evt.getKeyCode() == 10) {
            jCEstado.requestFocus();
        }

        if (jTEmail.getText().length() < 50) {
            email = jTEmail.getText();
        }


        if (jTEmail.getText().length() > 49) {
            if (evt.getKeyCode() != 10) {
                jTEmail.setText("");
                jTEmail.setText(email);
            }

        }


        if (evt.getKeyCode() == 38) {

            jFTelRec.requestFocus();
        }
    }//GEN-LAST:event_jTEmailKeyPressed

    private void jTEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTEmailKeyReleased
        if (jTEmail.getText().length() < 50) {
            email = jTEmail.getText();
        }


        if (jTEmail.getText().length() > 49) {
            if (evt.getKeyCode() != 10) {
                jTEmail.setText("");
                jTEmail.setText(email);
            }

        }
    }//GEN-LAST:event_jTEmailKeyReleased

    private void jTRuaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTRuaKeyPressed
        if (evt.getKeyCode() == 10) {
            jTBairro.requestFocus();
        }

        if (jTRua.getText().length() < 60) {
            rua = jTRua.getText();
        }


        if (jTRua.getText().length() > 59) {
            if (evt.getKeyCode() != 10) {
                jTRua.setText("");
                jTRua.setText(rua);
            }

        }

        if (evt.getKeyCode() == 38) {
            jFTCep.requestFocus();
        }
    }//GEN-LAST:event_jTRuaKeyPressed

    private void jTRuaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTRuaKeyReleased
        if (jTRua.getText().length() < 60) {
            rua = jTRua.getText();
        }


        if (jTRua.getText().length() > 59) {
            if (evt.getKeyCode() != 10) {
                jTRua.setText("");
                jTRua.setText(rua);
            }

        }
    }//GEN-LAST:event_jTRuaKeyReleased

    private void jTNumeroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTNumeroKeyPressed
        if (evt.getKeyCode() == 10) {
            jTComplemento.requestFocus();
        }

        if (jTNumero.getText().length() < 10) {
            numero = jTNumero.getText();
        }


        if (jTNumero.getText().length() > 9) {
            if (evt.getKeyCode() != 10) {
                jTNumero.setText("");
                jTNumero.setText(numero);
            }

        }



        if (evt.getKeyCode() == 38) {
            jTCidade.requestFocus();
        }
    }//GEN-LAST:event_jTNumeroKeyPressed

    private void jTNumeroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTNumeroKeyReleased
        if (jTNumero.getText().length() < 10) {
            numero = jTNumero.getText();
        }


        if (jTNumero.getText().length() > 9) {
            if (evt.getKeyCode() != 10) {
                jTNumero.setText("");
                jTNumero.setText(numero);
            }

        }
    }//GEN-LAST:event_jTNumeroKeyReleased

    private void jTComplementoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTComplementoKeyPressed
        if (evt.getKeyCode() == 10) {
            jTPais.requestFocus();
        }

        if (jTComplemento.getText().length() < 10) {
            compl = jTComplemento.getText();
        }


        if (jTComplemento.getText().length() > 9) {
            if (evt.getKeyCode() != 10) {
                jTComplemento.setText("");
                jTComplemento.setText(compl);
            }

        }

        if (evt.getKeyCode() == 38) {
            jTNumero.requestFocus();
        }
    }//GEN-LAST:event_jTComplementoKeyPressed

    private void jTComplementoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTComplementoKeyReleased
        if (jTComplemento.getText().length() < 10) {
            compl = jTComplemento.getText();
        }


        if (jTComplemento.getText().length() > 9) {
            if (evt.getKeyCode() != 10) {
                jTComplemento.setText("");
                jTComplemento.setText(compl);
            }

        }
    }//GEN-LAST:event_jTComplementoKeyReleased

    private void jTBairroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTBairroKeyPressed
        if (evt.getKeyCode() == 10) {
            jTCidade.requestFocus();
        }

        if (jTBairro.getText().length() < 50) {
            bairro = jTBairro.getText();
        }


        if (jTBairro.getText().length() > 49) {
            if (evt.getKeyCode() != 10) {
                jTBairro.setText("");
                jTBairro.setText(bairro);
            }

        }

        if (evt.getKeyCode() == 38) {
            jTRua.requestFocus();
        }
    }//GEN-LAST:event_jTBairroKeyPressed

    private void jTBairroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTBairroKeyReleased
        if (jTBairro.getText().length() < 50) {
            bairro = jTBairro.getText();
        }


        if (jTBairro.getText().length() > 49) {
            if (evt.getKeyCode() != 10) {
                jTBairro.setText("");
                jTBairro.setText(bairro);
            }

        }
    }//GEN-LAST:event_jTBairroKeyReleased

    private void jTCidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTCidadeKeyPressed
        if (evt.getKeyCode() == 10) {
            jTNumero.requestFocus();
        }

        if (jTCidade.getText().length() < 50) {
            cidade = jTCidade.getText();
        }


        if (jTCidade.getText().length() > 49) {
            if (evt.getKeyCode() != 10) {
                jTCidade.setText("");
                jTCidade.setText(cidade);
            }

        }

        if (evt.getKeyCode() == 38) {
              jTBairro.requestFocus();
        }
    }//GEN-LAST:event_jTCidadeKeyPressed

    private void jTCidadeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTCidadeKeyReleased

        if (jTCidade.getText().length() < 50) {
            cidade = jTCidade.getText();
        }


        if (jTCidade.getText().length() > 49) {
            if (evt.getKeyCode() != 10) {
                jTCidade.setText("");
                jTCidade.setText(cidade);
            }

        }
    }//GEN-LAST:event_jTCidadeKeyReleased

    private void jCEstadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCEstadoKeyPressed
         if (evt.getKeyCode() == 10) {
            jFTCep.requestFocus();
        }

        if (evt.getKeyCode() == 38) {
            jTEmail.requestFocus();
        }
    }//GEN-LAST:event_jCEstadoKeyPressed

    private void jTPaisKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTPaisKeyPressed
        if (jTPais.getText().length() < 50) {
            pais = jTPais.getText();
        }


        if (jTPais.getText().length() > 49) {
            if (evt.getKeyCode() != 10) {
                jTPais.setText("");
                jTPais.setText(pais);
            }

        }

        if (evt.getKeyCode() == 38) {
            //upperCase();
            jCEstado.requestFocus();
        }
    }//GEN-LAST:event_jTPaisKeyPressed

    private void jTPaisKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTPaisKeyReleased
        if (jTPais.getText().length() < 50) {
            pais = jTPais.getText();
        }


        if (jTPais.getText().length() > 49) {
            if (evt.getKeyCode() != 10) {
                jTPais.setText("");
                jTPais.setText(pais);
            }

        }
    }//GEN-LAST:event_jTPaisKeyReleased

    private void jFTCepKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTCepKeyPressed
        if (evt.getKeyCode() == 16 || evt.getKeyCode() == 18) {
            jTRua.requestFocus();
        }

        if (jFTCep.getText().length() <= 9) {
            if (evt.getKeyCode() >= 48 && evt.getKeyCode() <= 57 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105
                    || evt.getKeyCode() == 8 || evt.getKeyCode() == 10 || evt.getKeyCode() == 38) {
                //cpf = jFTCep.getText();

                if (jFTCep.getText().length() == 5) {
                    if (evt.getKeyCode() != 8) {
                        cep = jFTCep.getText();
                        jFTCep.setText(cep + "-");
                    }
                } else {
                    cep = jFTCep.getText();
                }


            } else {
                JOptionPane.showMessageDialog(this, "Digite apenas números.", "Atenção", JOptionPane.WARNING_MESSAGE);
                jFTCep.setText("");
                jFTCep.setText(cep);
            }
        }


        if (jFTCep.getText().length() > 9) {
            if (evt.getKeyCode() != 10 || evt.getKeyCode() != 8) {
                jFTCep.setText("");
                jFTCep.setText(cep);
            }

        }


        if (evt.getKeyCode() == 10) {
            jTRua.requestFocus();
        }

        if (evt.getKeyCode() == 38) {
            jCEstado.requestFocus();
        }
    }//GEN-LAST:event_jFTCepKeyPressed

    private void jFTCepKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTCepKeyReleased
        if (jFTCep.getText().length() <= 9) {
            if (evt.getKeyCode() >= 48 && evt.getKeyCode() <= 57 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105
                    || evt.getKeyCode() == 8 || evt.getKeyCode() == 10 || evt.getKeyCode() == 38) {
                //cpf = jFTCep.getText();

                if (jFTCep.getText().length() == 5) {
                    if (evt.getKeyCode() != 8) {
                        cep = jFTCep.getText();
                        jFTCep.setText(cep + "-");
                    }
                } else {
                    cep = jFTCep.getText();
                }


            } else {
                JOptionPane.showMessageDialog(this, "Digite apenas números.", "Atenção", JOptionPane.WARNING_MESSAGE);
                jFTCep.setText("");
                jFTCep.setText(cep);
            }
        }
        
        if(jFTCep.getText().length()==9){
             
           preencheEnd();
        }


        if (jFTCep.getText().length() > 9) {
            if (evt.getKeyCode() != 10 || evt.getKeyCode() != 8) {
                jFTCep.setText("");
                jFTCep.setText(cep);
            }

        }
    }//GEN-LAST:event_jFTCepKeyReleased

    private void jTPesquisaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTPesquisaMouseClicked
        linhaSelecionadaFuncionario(jTPesquisa);
    }//GEN-LAST:event_jTPesquisaMouseClicked

    private void jCBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBuscaActionPerformed
        try {
            listarFuncionarios();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Problema ao selecionar tipo de pesquisa.\n"+ex);
        }
    }//GEN-LAST:event_jCBuscaActionPerformed

    private void jBPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPesquisarActionPerformed
        try {
            listarFuncionarios();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas no botão de pesquisa.\n " + ex);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Nenhhum funcionário encontrado.\n " + e);
        }
        jTPesquisar.requestFocus();

        if (msg == false) {
            JOptionPane.showMessageDialog(null, "Nenhum funcionário encontrado.", "Pesquisa", JOptionPane.INFORMATION_MESSAGE);
        }
        jTPesquisar.requestFocus();
    }//GEN-LAST:event_jBPesquisarActionPerformed

    private void jTPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTPesquisarKeyReleased
        if (evt.getKeyCode() >= 60 && evt.getKeyCode() <= 90 || evt.getKeyCode() >= 37 && evt.getKeyCode() <= 40
                || evt.getKeyCode() >= 48 && evt.getKeyCode() <= 57 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105
                || evt.getKeyCode() == 8 || evt.getKeyCode() == 10) {
            try {
                listarFuncionarios();

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Problemas no campo de pesquisa.\n" + ex);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Nenhhum funcionário encontrado.\n" + e);
            }
            jTPesquisar.requestFocus();
        }
    }//GEN-LAST:event_jTPesquisarKeyReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        sair();
    }//GEN-LAST:event_formWindowClosing

    private void jBProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBProximoActionPerformed
        jTFuncionarios.setSelectedComponent(jPEnd);
    }//GEN-LAST:event_jBProximoActionPerformed

    private void jBPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPesquisaActionPerformed
        jTFuncionarios.setSelectedComponent(jPPesquisa);
    }//GEN-LAST:event_jBPesquisaActionPerformed

    private void jBAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAnteriorActionPerformed
        jTFuncionarios.setSelectedComponent(jPDados);
    }//GEN-LAST:event_jBAnteriorActionPerformed

    private void jBProximo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBProximo2ActionPerformed
        jTFuncionarios.setSelectedComponent(jPPesquisa);
    }//GEN-LAST:event_jBProximo2ActionPerformed

    private void jBVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVoltarActionPerformed
      jTFuncionarios.setSelectedComponent(jPDados);
    }//GEN-LAST:event_jBVoltarActionPerformed

    private void jCEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCEstadoActionPerformed
         preencheEnd();
    }//GEN-LAST:event_jCEstadoActionPerformed

    //variáveis para controle de quantidade de caracteres e bloqueio de letras em campos numéricos
    String nome="";String rg="";String cpf="";String nac="";String cargo="";String salario="";
int ponto=0;String obs="";String tel="";String telCom="";String cel="";String id="";String telRec="";String email="";String cep="";String rua="";String numero="";String compl="";String bairro="";String cidade="";String pais="";
    
    public void cadastrarFuncionario() throws SQLException{
       String data="";
            if(verificaDados()){
                
                 String sql = "select *from funcionario";
         PreparedStatement stmt = this.conexao.prepareStatement(sql);
         ResultSet rs = stmt.executeQuery();
         boolean igual=false;
        
         
        
         //Verifica se o nome ou cpf usado já está cadastrado no sistema
         while(rs.next()){
             if(jTNome.getText().equals(rs.getString("nome_funcionario"))||
                     jFTCpf.getText().equals(rs.getString("cpf_funcionario"))){
                 igual=true; 
             }
         }
         
         rs.close();
         stmt.close();
         
         if(igual==false)
         {
               try {
            atributos user = new atributos();
            user.setNomeFuncionario(jTNome.getText());
            user.setSexoFuncionario(jCSexo.getSelectedItem().toString());
            user.setSexoFuncionario(jCSexo.getSelectedItem().toString());
                  user.setDiaFuncionario(jCDia.getSelectedItem().toString());
            user.setMesFuncionario(jCMes.getSelectedItem().toString());
            user.setAnoFuncionario(jCAno.getSelectedItem().toString());
            data = jCDia.getSelectedItem().toString();
       data = data+"/"+jCMes.getSelectedItem().toString();
        data = data+"/"+jCAno.getSelectedItem();toString();
            user.setDtNascFuncionario(data);
            
            user.setRgFuncionario(jTRg.getText());
            user.setCpfFuncionario(jFTCpf.getText());
            user.setNacFuncionario(jTNacionalidade.getText());
            user.setEstCivilFuncionario(jCEstadoCivil.getSelectedItem().toString());
            user.setCargoFuncionario(jTCargo.getText());
            user.setSalarioFuncionario(jTSalario.getText());
            user.setStatusFuncionario(jCStatus.getSelectedItem().toString());
            user.setObsFuncionario(jTObs.getText());
            user.setTelResFuncionario(jFTelRes.getText());
            user.setTelComFuncionario(jFTelCom.getText());
            user.setCelFuncionario(jFCel.getText());
            user.setIdFuncionario(jFId.getText());
            user.setTelRecFuncionario(jFTelRec.getText());
            user.setEmailFuncionario(jTEmail.getText());
            user.setCepFuncionario(jFTCep.getText());
            user.setRuaFuncionario(jTRua.getText());
            user.setNumFuncionario(jTNumero.getText());
            user.setComplFuncionario(jTComplemento.getText());
            user.setBairroFuncionario(jTBairro.getText());
            user.setCidadeFuncionario(jTCidade.getText());
            user.setUfFuncionario(jCEstado.getSelectedItem().toString());
            user.setPaisFuncionario(jTPais.getText());
           
            
            funcionarioDao dao = new funcionarioDao();
            dao.cadastroFuncionario(user);
            desabilitaDados();
            listarFuncionarios();
            JOptionPane.showMessageDialog(null, "Funcionário cadastrado com sucesso.","Cadastro",JOptionPane.INFORMATION_MESSAGE); 
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Erro com o banco de dados.","Erro",JOptionPane.ERROR_MESSAGE);
        }
            }else{
             JOptionPane.showMessageDialog(this,"Este nome ou CPF já está cadastrado no sistema","Atenção",JOptionPane.INFORMATION_MESSAGE);
         }
         }         
              
            
        }
    String nomeigual,cpfigual;
    private void alteraFuncionario() throws SQLException {
         String data="";
        if(jTPesquisa.getSelectedRow() != -1){
            UIManager.put("OptionPane.noButtonText", "Não");  
         UIManager.put("OptionPane.yesButtonText", "Sim");
            int resp = JOptionPane.showConfirmDialog(null, "Deseja realmente alterar este funcionário?", "Confirmação", 0,3);
         if (resp == 0){
              if(verificaDados()){
                  
                  String sql = "select *from funcionario";
         PreparedStatement stmt = this.conexao.prepareStatement(sql);
         ResultSet rs = stmt.executeQuery();
         boolean nome_igual=false;
         boolean cpf_igual=false;
        
         
          //Se o usuário tentar alterar o nome ou o cpf para algum já cadastrado o programa irá impedir
         if(!jTNome.getText().equals(nomeigual)){
             while(rs.next()){
             if(jTNome.getText().equals(rs.getString("nome_funcionario"))){
                 nome_igual=true; 
             }
         }
         }
         
         if(!jFTCpf.getText().equals(cpfigual)){
              while(rs.next()){
                  if(jFTCpf.getText().equals(rs.getString("cpf_funcionario"))){
                 cpf_igual=true;
             } 
              }
         }
         
         rs.close();
         stmt.close();
         
         if(nome_igual==false && cpf_igual==false){
               atributos at = new atributos();
                funcionarioDao dao =  new funcionarioDao();
                at.setCodigoFuncionario(Long.valueOf(jTCodigo.getText()));
                at.setNomeFuncionario(jTNome.getText());
                  at.setSexoFuncionario(jCSexo.getSelectedItem().toString());
                  at.setDiaFuncionario(jCDia.getSelectedItem().toString());
            at.setMesFuncionario(jCMes.getSelectedItem().toString());
            at.setAnoFuncionario(jCAno.getSelectedItem().toString());
               data = jCDia.getSelectedItem().toString();
       data = data+"/"+jCMes.getSelectedItem().toString();
        data = data+"/"+jCAno.getSelectedItem();toString();
            at.setDtNascFuncionario(data);
                at.setRgFuncionario(jTRg.getText());
                at.setCpfFuncionario((jFTCpf.getText()));
                at.setNacFuncionario((jTNacionalidade.getText()));
                at.setEstCivilFuncionario(jCEstadoCivil.getSelectedItem().toString());
                at.setCargoFuncionario((jTCargo.getText()));
                at.setSalarioFuncionario((jTSalario.getText()));
                at.setStatusFuncionario(jCStatus.getSelectedItem().toString());
                at.setObsFuncionario(jTObs.getText());
                at.setTelResFuncionario(jFTelRes.getText());
                at.setTelComFuncionario(jFTelCom.getText());
                at.setCelFuncionario(jFCel.getText());
                at.setIdFuncionario(jFId.getText());
                at.setTelRecFuncionario(jFTelRec.getText());
                at.setEmailFuncionario(jTEmail.getText());
                at.setCepFuncionario(jFTCep.getText());
                at.setRuaFuncionario(jTRua.getText());
                at.setNumFuncionario(jTNumero.getText());
                at.setComplFuncionario(jTComplemento.getText());
                at.setBairroFuncionario(jTBairro.getText());
                at.setCidadeFuncionario(jTCidade.getText());
                at.setUfFuncionario(jCEstado.getSelectedItem().toString());
                at.setPaisFuncionario(jTPais.getText());
               
                dao.alteraFuncionario(at);
                 JOptionPane.showMessageDialog(null,"Funcionário alterado com sucesso.","Alterar",JOptionPane.INFORMATION_MESSAGE);
                  listarFuncionarios();
                 desabilitaDados();  
               
            }else{
             JOptionPane.showMessageDialog(this,"Este nome ou CPF já está cadastrado no sistema","Atenção",JOptionPane.INFORMATION_MESSAGE);
         }
        }
         }
              
         }
           
         }
    
  public void excluirFuncionario() throws SQLException{
      UIManager.put("OptionPane.noButtonText", "Não");  
         UIManager.put("OptionPane.yesButtonText", "Sim");
        int resp = JOptionPane.showConfirmDialog(null, "Deseja realmente alterar este funcionário?", "Confirmação", 0,3);
         if (resp == 0){
                funcionarioDao dao;
                dao = new funcionarioDao();
                dao.excluirFuncionario(funcionarios.get(jTPesquisa.getSelectedRow()));
                mostraPesquisaFuncionarios(funcionarios);
                JOptionPane.showMessageDialog(null,"Funcionário excluído com sucesso.","Excluir",JOptionPane.INFORMATION_MESSAGE);
                limparDados();
                listarFuncionarios();
            desabilitaDados();
             jTFuncionarios.setSelectedComponent(jPDados);
         }
        }  
  
 //Método para preencher o endereço automaticamente de acordo com o cep
  public void preencheEnd(){
             String uf="";
             switch(jCEstado.getSelectedIndex()){
                 case 0:
                    uf = "ac";
                     break;
                 case 1:
                     uf = "al";
                     break;
                 case 2:
                     uf = "am";
                     break;
                 case 3:
                     uf = "ap";
                     break;
                 case 4:
                     uf = "ba";
                     break;
                 case 5:
                     uf = "ce";
                     break;
                 case 6:
                     uf = "df";
                     break;
                 case 7:
                     uf = "es";
                     break;
                 case 8:
                     uf = "go";
                     break;
                 case 9:
                     uf = "ma";
                     break;
                 case 10:
                     uf = "mg";
                     break;
                 case 11:
                     uf = "ms";
                     break;
                 case 12:
                     uf = "mt";
                     break;
                 case 13:
                     uf = "pa";
                     break;
                 case 14:
                     uf = "pb";
                     break;
                 case 15:
                     uf = "pe";
                     break;
                 case 16:
                     uf = "pi";
                     break;
                 case 17:
                     uf = "pr";
                     break;
                 case 18:
                     uf = "rj";
                     break;
                 case 19:
                     uf = "rn";
                     break;
                 case 20:
                     uf = "ro";
                     break;
                 case 21:
                     uf = "rr";
                     break;
                 case 22:
                     uf = "rs";
                     break;
                 case 23:
                     uf = "sc";
                     break;
                 case 24:
                     uf = "se";
                     break;
                 case 25:
                     uf = "sp";
                     break;
                 case 26:
                     uf = "toc";
                     break;
                     
             }
             
               try{
             String sql = "select *from "+uf+" where cep like ?";
         PreparedStatement stmt = this.conexao.prepareStatement(sql);
         stmt.setString(1, jFTCep.getText());
         ResultSet rs = stmt.executeQuery();
         
         while(rs.next()){
             jTRua.setText(rs.getString("tp_logradouro")+" "+rs.getString("logradouro"));
             jTBairro.setText(rs.getString("bairro"));
             jTCidade.setText(rs.getString("cidade"));
             jTPais.setText("Brasil");
         }
         
         rs.close();
         stmt.close();
         
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null,"Erro ao pesquisar cep.\nErro: "+ex);
        }
         }
  
   public void impressaoFuncionario() {
	 
	    // note que estamos chamando o novo relatório
	    InputStream inputStream = getClass().getResourceAsStream( "/Funcionarios.jasper" );
	 
	    // mapa de parâmetros do relatório
	    Map parametros = new HashMap();
	 
	    /*
	     * Insere o parâmetro primeiroNome no mapa, com o valor F%
	     * ou seja, todos os clientes que tenham primeiro nome começando
	     * com a letra F.
	     */
	    parametros.put( "codigoFuncionario", jTCodigo.getText() );
	 
	    // outros possíveis parâmetros aqui...
	 
	    try {
	 
	        // abre o relatório
	        Impressao.openReport( "Funcionarios", inputStream, parametros,
	                ConexaoImpressao.getMindConnection() );
                
	  this.dispose();
	    } catch ( SQLException exc ) {
	        exc.printStackTrace();
	    } catch ( JRException exc ) {
	        exc.printStackTrace();
	    }
	 
	}
    
 
    
     public void limparDados(){
            jTCodigo.setText("");
            jTNome.setText("");
            jCSexo.setSelectedIndex(0);
            jCDia.setSelectedIndex(0);
            jCMes.setSelectedIndex(0);
            jCAno.setSelectedIndex(0);
            jTRg.setText("");
            jFTCpf.setText("");
            jTNacionalidade.setText("");
            jCEstadoCivil.setSelectedIndex(0);
            jTCargo.setText("");
            jTSalario.setText("");
            jCStatus.setSelectedIndex(0);
            jTObs.setText("");
            jFTelRes.setText("");
            jFTelCom.setText("");
            jFCel.setText("");
            jFId.setText("");
            jFTelRec.setText("");
            jTEmail.setText("");
            jTRua.setText("");
            jTNumero.setText("");
            jTComplemento.setText("");
            jFTCep.setText("");
            jTBairro.setText("");
            jTCidade.setText("");
            jCEstado.setSelectedIndex(0);
            jTPais.setText("");
             jLValidacao.setVisible(false);
            nome="";
            rg="";
            cpf="";
            nac="";
            salario="";
            cargo="";
            obs = "";
            tel ="";
       telCom="";
       cel ="";
       id = "";
       telRec="";
       rua="";
       numero="";
       bairro="";
       cidade="";
       compl="";
       cidade="";
       pais="";
       cep = "";
             jLObrNome.setForeground(Color.BLACK);
                jLObrDtNasc.setForeground(Color.BLACK);
                jLObrRg.setForeground(Color.BLACK);
                jLObrCpf.setForeground(Color.BLACK);
                jLObrNac.setForeground(Color.BLACK);
                jLObrCargo.setForeground(Color.BLACK);
                jLObrSalario.setForeground(Color.BLACK);
                jLObrContato.setForeground(Color.BLACK);
                jLObrCep.setForeground(Color.BLACK);
                jLObrRua.setForeground(Color.BLACK);
                jLObrNum.setForeground(Color.BLACK);
                jLObrBairro.setForeground(Color.BLACK);
                jLObrCidade.setForeground(Color.BLACK);
                jLObrPais.setForeground(Color.BLACK);
        }
     
     boolean msg = true;
     
      private void mostraPesquisaFuncionarios(List<atributos> funcionarios) {
      while(tmFuncionarios.getRowCount()>0){
          tmFuncionarios.removeRow(0);
      }
        if(funcionarios.isEmpty()){
         msg = false;
      }else{
             msg = true;
          String []linha = new String [] {null, null, null, null, null, null};
          for (int i = 0; i < funcionarios.size(); i++){
              tmFuncionarios.addRow(linha);
              tmFuncionarios.setValueAt(funcionarios.get(i).getCodigoFuncionario(), i, 0);
              tmFuncionarios.setValueAt(funcionarios.get(i).getNomeFuncionario(), i, 1);
              tmFuncionarios.setValueAt(funcionarios.get(i).getCpfFuncionario(), i, 2);
              tmFuncionarios.setValueAt(funcionarios.get(i).getCargoFuncionario(), i, 3);
              tmFuncionarios.setValueAt(funcionarios.get(i).getSalarioFuncionario(), i, 4);
              tmFuncionarios.setValueAt(funcionarios.get(i).getStatusFuncionario(), i, 5);
          }
      }
    }
      
       protected void listarFuncionarios() throws SQLException{
        funcionarioDao dao = new funcionarioDao ();
        
        switch(jCBusca.getSelectedIndex()){
            case 0:
                 funcionarios = dao.getListaNomeFuncionario("%" + jTPesquisar.getText() + "%");
        mostraPesquisaFuncionarios(funcionarios);
                break;
              
            case 1:
                funcionarios = dao.getListaCodigo(jTPesquisar.getText());
        mostraPesquisaFuncionarios(funcionarios);
                break;
      
            case 2:
                 funcionarios = dao.getListaCpf("%" + jTPesquisar.getText() + "%");
        mostraPesquisaFuncionarios(funcionarios);
                break;    
            case 3:
                funcionarios = dao.getListaCargo("%" + jTPesquisar.getText() + "%");
                mostraPesquisaFuncionarios(funcionarios);
                 break;
            case 4:
                funcionarios = dao.getListaSalario("%" + jTPesquisar.getText() + "%");
                mostraPesquisaFuncionarios(funcionarios);
            case 5:
                 funcionarios = dao.getListaStatus("%" + jTPesquisar.getText() + "%");
                mostraPesquisaFuncionarios(funcionarios);
           
        }
    }
       
       private void linhaSelecionadaFuncionario(JTable tabela){
          
        if(jTPesquisa.getSelectedRow()!=-1){
            habilitaDados();
            jBSalvar.setEnabled(false);
            jBAlterar.setEnabled(true);
            jBImprimir.setEnabled(true);
            jBExcluir.setEnabled(true);
        jTCodigo.setText(String.valueOf(funcionarios.get(tabela.getSelectedRow()).getCodigoFuncionario()));
        jTNome.setText(funcionarios.get(tabela.getSelectedRow()).getNomeFuncionario());
        jCSexo.setSelectedItem(funcionarios.get(tabela.getSelectedRow()).getSexoFuncionario());
        jCDia.setSelectedItem(funcionarios.get(tabela.getSelectedRow()).getDiaFuncionario());
        jCMes.setSelectedItem(funcionarios.get(tabela.getSelectedRow()).getMesFuncionario());
        jCAno.setSelectedItem(funcionarios.get(tabela.getSelectedRow()).getAnoFuncionario());
        jTRg.setText(funcionarios.get(tabela.getSelectedRow()).getRgFuncionario());
        jFTCpf.setText(funcionarios.get(tabela.getSelectedRow()).getCpfFuncionario());
        jTNacionalidade.setText(funcionarios.get(tabela.getSelectedRow()).getNacFuncionario());
        jCEstadoCivil.setSelectedItem(funcionarios.get(tabela.getSelectedRow()).getEstCivilFuncionario());
        jTCargo.setText(funcionarios.get(tabela.getSelectedRow()).getCargoFuncionario());
        jTSalario.setText(funcionarios.get(tabela.getSelectedRow()).getSalarioFuncionario());
        jCStatus.setSelectedItem(funcionarios.get(tabela.getSelectedRow()).getStatusFuncionario());
        jTObs.setText(funcionarios.get(tabela.getSelectedRow()).getObsFuncionario());
        jFTelRes.setText(funcionarios.get(tabela.getSelectedRow()).getTelResFuncionario());
        jFTelCom.setText(funcionarios.get(tabela.getSelectedRow()).getTelComFuncionario());
        jFCel.setText(funcionarios.get(tabela.getSelectedRow()).getCelFuncionario());
        jFId.setText(funcionarios.get(tabela.getSelectedRow()).getIdFuncionario());
        jFTelRec.setText(funcionarios.get(tabela.getSelectedRow()).getTelRecFuncionario());
        jTEmail.setText(funcionarios.get(tabela.getSelectedRow()).getEmailFuncionario());
         jFTCep.setText(funcionarios.get(tabela.getSelectedRow()).getCepFuncionario());
        jTRua.setText(funcionarios.get(tabela.getSelectedRow()).getRuaFuncionario());
        jTNumero.setText(funcionarios.get(tabela.getSelectedRow()).getNumFuncionario());
        jTComplemento.setText(funcionarios.get(tabela.getSelectedRow()).getComplFuncionario());
        jTBairro.setText(funcionarios.get(tabela.getSelectedRow()).getBairroFuncionario());
        jTCidade.setText(funcionarios.get(tabela.getSelectedRow()).getCidadeFuncionario());
        jCEstado.setSelectedItem(funcionarios.get(tabela.getSelectedRow()).getUfFuncionario());
        jTPais.setText(funcionarios.get(tabela.getSelectedRow()).getPaisFuncionario());
       nomeigual = jTNome.getText();
        cpfigual = jFTCpf.getText();
        
        nome = jTNome.getText();
        rg = jTRg.getText();
        cpf = jFTCpf.getText();
        nac = jTNacionalidade.getText();
        cargo = jTCargo.getText();
        salario = jTSalario.getText();
        obs = jTSalario.getText();
        tel = jFTelRes.getText();
        telCom = jFTelCom.getText();
        cel = jFCel.getText();
        id = jFId.getText();
        telRec = jFTelRec.getText();
        email = jTEmail.getText();
        rua = jTRua.getText();
        cep = jFTCep.getText();
        numero = jTNumero.getText();
        compl = jTComplemento.getText();
        bairro = jTBairro.getText();
        cidade = jTCidade.getText();
        pais = jTPais.getText();
        jTFuncionarios.setSelectedComponent(jPDados);
       
        } else{
           limparDados();
       }
      
       jTPesquisar.setText("");
    }
    
     public void habilitaDados(){
            jTNome.setEditable(true);
            jCSexo.setEnabled(true);
            jCDia.setEnabled(true);
            jCMes.setEnabled(true);
            jCAno.setEnabled(true);
            jTRg.setEditable(true);
            jFTCpf.setEditable(true);
            jTNacionalidade.setEditable(true);
            jCEstadoCivil.setEnabled(true);
            jTCargo.setEditable(true);
            jTSalario.setEditable(true);
            jCStatus.setEnabled(true);
            jTObs.setEnabled(true);
            jFTelRes.setEditable(true);
            jFTelCom.setEditable(true);
            jFCel.setEditable(true);
            jFId.setEditable(true);
            jFTelRec.setEditable(true);
            jTEmail.setEditable(true);
            jTRua.setEditable(true);
            jTNumero.setEditable(true);
            jTComplemento.setEditable(true);
            jFTCep.setEditable(true);
            jTBairro.setEditable(true);
            jTCidade.setEditable(true);
            jCEstado.setEnabled(true);
            jTPais.setEditable(true);
            jBSalvar.setEnabled(true);
           jBCancelar.setEnabled(true);
           jBNovo.setEnabled(false);
        }
    
    
     public void desabilitaDados(){
            jTNome.setEditable(false);
            jCSexo.setEnabled(false);
            jCDia.setEnabled(false);
            jCMes.setEnabled(false);
            jCAno.setEnabled(false);
            jTRg.setEditable(false);
            jFTCpf.setEditable(false);
            jTNacionalidade.setEditable(false);
            jCEstadoCivil.setEnabled(false);
            jTCargo.setEditable(false);
            jTSalario.setEditable(false);
            jCStatus.setEnabled(false);
            jTObs.setEnabled(false);
            jFTelRes.setEditable(false);
            jFTelCom.setEditable(false);
            jFCel.setEditable(false);
            jFId.setEditable(false);
            jFTelRec.setEditable(false);
            jTEmail.setEditable(false);
            jTRua.setEditable(false);
            jTNumero.setEditable(false);
            jTComplemento.setEditable(false);
            jFTCep.setEditable(false);
            jTBairro.setEditable(false);
            jTCidade.setEditable(false);
            jCEstado.setEnabled(false);
            jTPais.setEditable(false);
            jBSalvar.setEnabled(false);
            jBExcluir.setEnabled(false);
            jBCancelar.setEnabled(false);
           jBImprimir.setEnabled(false);
           jBAlterar.setEnabled(false);
           jBNovo.setEnabled(true);
        }
    
     public boolean verificaDados(){
        if(jTNome.getText().equals("") || jCDia.getSelectedIndex()==0 || jCMes.getSelectedIndex()==0 || jCAno.getSelectedIndex()==0 || 
                 jLDtInvalida.getText().equals("Data inválida") || jTRg.getText().equals("") || jFTCpf.getText().length()!=11 || 
                jFTCpf.getText().length()==11 && jLValidacao.getText().equals("CPF Inválido") || jTNacionalidade.getText().equals("") || 
                jTCargo.getText().equals("") || jTSalario.getText().equals("") || jFTelRes.getText().length()!=14 
                && jFTelCom.getText().length()!=14  && jFCel.getText().length()<14  && jFId.getText().equals("") && jFTelRec.getText().length()!=14
                && jTEmail.getText().equals("")|| jTRua.getText().equals("") || jTNumero.getText().equals("") || jFTCep.getText().length()!=9 ||
                jTBairro.getText().equals("") || jTCidade.getText().equals("") || jTPais.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Há campos obrigatórios não preenchidos.","Atenção", JOptionPane.WARNING_MESSAGE);
             if(jTPais.getText().equals("")){
                    jLObrPais.setForeground(Color.red);
                    jTFuncionarios.setSelectedComponent(jPEnd);
                    jTPais.requestFocus();
                }else{
             jLObrPais.setForeground(Color.black);
        }
                
                if(jTCidade.getText().equals("")){
                    jLObrCidade.setForeground(Color.red);
                    jTFuncionarios.setSelectedComponent(jPEnd);
                    jTCidade.requestFocus();
                }else{
                    jLObrCidade.setForeground(Color.black);
                }
                
                if(jTBairro.getText().equals("")){
                    jLObrBairro.setForeground(Color.red);
                    jTFuncionarios.setSelectedComponent(jPEnd);
                    jTBairro.requestFocus();
                }else{
                     jLObrBairro.setForeground(Color.black);
                }
                
                if(jTNumero.getText().equals("")){
                    jLObrNum.setForeground(Color.red);
                    jTFuncionarios.setSelectedComponent(jPEnd);
                    jTNumero.requestFocus();
                }else{
                    jLObrNum.setForeground(Color.black);
                }
                
                if(jTRua.getText().equals("")){
                    jLObrRua.setForeground(Color.red);
                    jTFuncionarios.setSelectedComponent(jPEnd);
                    jTRua.requestFocus();
                }else{
                    jLObrRua.setForeground(Color.black);
                }
                
                if(jFTCep.getText().length()!=9){
                    jLObrCep.setForeground(Color.red);
                    jTFuncionarios.setSelectedComponent(jPEnd);
                    jFTCep.requestFocus();
                }else{
                     jLObrCep.setForeground(Color.black);
                }
                
                if(jFTelRes.getText().length()!=14 && jFTelCom.getText().length()!=14 &&
                        jFCel.getText().length()!=14 && jFId.getText().equals("")&&
                        jFTelRec.getText().length()!=14 && jTEmail.getText().equals("")){
                    jLObrContato.setForeground(Color.red);
                    jTFuncionarios.setSelectedComponent(jPEnd);
                    jFTelRes.requestFocus();
                }else{
                     jLObrContato.setForeground(Color.black);
                }
                
                if(jTSalario.getText().equals("")){
                    jLObrSalario.setForeground(Color.red);
                    jTFuncionarios.setSelectedComponent(jPDados);
                    jTSalario.requestFocus();
                }else{
                    jLObrSalario.setForeground(Color.black);
                }
                
                 if(jTCargo.getText().equals("")){
                    jLObrCargo.setForeground(Color.red);
                    jTFuncionarios.setSelectedComponent(jPDados);
                    jTCargo.requestFocus();
                }else{
                    jLObrCargo.setForeground(Color.black);
                }
                 
                  if(jTNacionalidade.getText().equals("")){
                    jLObrNac.setForeground(Color.red);
                    jTFuncionarios.setSelectedComponent(jPDados);
                    jTNacionalidade.requestFocus();
                }else{
                    jLObrNac.setForeground(Color.black);
                }
                
                if(jFTCpf.getText().length()!=11 ||  jFTCpf.getText().length()==11 && jLValidacao.getText().equals("CPF Inválido") ){
                    jLObrCpf.setForeground(Color.red);
                    jTFuncionarios.setSelectedComponent(jPDados);
                    jFTCpf.requestFocus();
                }else{
                      jLObrCpf.setForeground(Color.black);
                }
                
                if(jTRg.getText().equals("")){
                    jLObrRg.setForeground(Color.red);
                    jTFuncionarios.setSelectedComponent(jPDados);
                    jTRg.requestFocus();
                }else{
                    jLObrRg.setForeground(Color.black);
                }
                
                 if(jCDia.getSelectedIndex()==0 || jCMes.getSelectedIndex()==0 || jCAno.getSelectedIndex()==0
                        || jLDtInvalida.getText().equals("Data inválida")){
                    jLObrDtNasc.setForeground(Color.red);
                    jTFuncionarios.setSelectedComponent(jPDados);
                    jCDia.requestFocus();
                }else{
                     jLObrDtNasc.setForeground(Color.black);
                }
                
                if(jTNome.getText().equals("")){
                    jLObrNome.setForeground(Color.red);
                    jTFuncionarios.setSelectedComponent(jPDados);
                    jTNome.requestFocus();
                }else{
                    jLObrNome.setForeground(Color.black);
                }
                
        return false;
        }else{
             jLObrNome.setForeground(Color.BLACK);
                jLObrDtNasc.setForeground(Color.BLACK);
                jLObrRg.setForeground(Color.BLACK);
                jLObrCpf.setForeground(Color.BLACK);
                jLObrNac.setForeground(Color.BLACK);
                jLObrCargo.setForeground(Color.BLACK);
                jLObrSalario.setForeground(Color.BLACK);
                jLObrContato.setForeground(Color.BLACK);
                jLObrCep.setForeground(Color.BLACK);
                jLObrRua.setForeground(Color.BLACK);
                jLObrNum.setForeground(Color.BLACK);
                jLObrBairro.setForeground(Color.BLACK);
                jLObrCidade.setForeground(Color.BLACK);
                jLObrPais.setForeground(Color.BLACK);
            return true;
        }
        
    }
    
     public void upperCase(){
             String nomeUpper="";
         nomeUpper = jTNome.getText();
          jTNome.setText(nomeUpper.toUpperCase());
         }
     
      public void validaCPF(){
             if(jFTCpf.getText().length()==11){
            String CPF = jFTCpf.getText();
        int n1 = CPF.charAt(0) - 48;        int n2 = CPF.charAt(1) - 48;
        int n3 = CPF.charAt(2) - 48;        int n4 = CPF.charAt(3) - 48;
        int n5 = CPF.charAt(4) - 48;        int n6 = CPF.charAt(5) - 48;
        int n7 = CPF.charAt(6) - 48;        int n8 = CPF.charAt(7) - 48;
        int n9 = CPF.charAt(8) - 48;        int n10 = CPF.charAt(9) - 48;
        int n11 = CPF.charAt(10) - 48;
        //Calculo aqui
        int sm = (n1*10)+(n2*9)+(n3*8)+(n4*7)+(n5*6)+(n6*5)+(n7*4)+(n8*3)+(n9*2);
        int DV1=11 - (sm % 11);
        int sm2= (n1*11)+(n2*10)+(n3*9)+(n4*8)+(n5*7)+(n6*6)+(n7*5)+(n8*4)+(n9*3)+(n10*2);
        int DV2=11 - (sm2 % 11);
        if (CPF.equals("00000000000") || CPF.equals("11111111111") || CPF.equals("22222222222")
            || CPF.equals("33333333333") || CPF.equals("44444444444") || CPF.equals("55555555555")
            || CPF.equals("66666666666") || CPF.equals("77777777777") || CPF.equals("88888888888")
            || CPF.equals("99999999999"))
        {
            jLValidacao.setVisible(true);
            jLValidacao.setForeground(Color.RED);
            jLValidacao.setText("CPF Inválido");
                
        }else{
             if((DV1==n10||(DV1==10&&n10==0)||(DV1==11&&n10==0))&&(DV2==n11||(DV2==10&&n11==0)||(DV2==11&&n11==0))){
               jLValidacao.setVisible(true);
            jLValidacao.setForeground(Color.BLACK);
            jLValidacao.setText("CPF Válido");
            //System.out.println(DV1+" "+DV2);
                
            }else{
             jLValidacao.setVisible(true);
            jLValidacao.setForeground(Color.RED);
            jLValidacao.setText("CPF Inválido");
            }
             //cpf = jFTCpf.getText();
        }
        }
         }
      
       public void validaData(){

    if(jCDia.getSelectedIndex()!=0 && jCMes.getSelectedIndex()!=0 && jCAno.getSelectedIndex()!=0 ){
        int ano = Integer.parseInt(jCAno.getSelectedItem().toString()); 
          if(jCMes.getSelectedIndex()==2 && jCDia.getSelectedIndex()>29 ||(jCMes.getSelectedIndex()==4 && jCDia.getSelectedIndex()>30 ||jCMes.getSelectedIndex()==6 && jCDia.getSelectedIndex()>30
              ||jCMes.getSelectedIndex()==9 && jCDia.getSelectedIndex()>30 ||jCMes.getSelectedIndex()==11 && jCDia.getSelectedIndex()>30 
               ||jCDia.getSelectedIndex()==29 && jCMes.getSelectedIndex()==2 && ano%4!=0)){
           jLDtInvalida.setVisible(true);
           jLDtInvalida.setText("Data inválida");
           jLDtInvalida.setForeground(Color.RED);
       }else{
            jLDtInvalida.setText("");  
            jLDtInvalida.setVisible(false);
       }
    }else{
        jLDtInvalida.setText("");  
            jLDtInvalida.setVisible(false);
    }
       }
     public void sair(){
         UIManager.put("OptionPane.noButtonText", "Não");  
         UIManager.put("OptionPane.yesButtonText", "Sim");
         int x = JOptionPane.showConfirmDialog(null, "Deseja encerrar o cadastro de funcionários?", "Alerta",0, 2);
        
        if (x==0) {
        this.dispose();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                JFFuncionarios dialog = null;
                try {
                    dialog = new JFFuncionarios(new javax.swing.JFrame(), true);
                } catch (SQLException ex) {
                   JOptionPane.showMessageDialog(null,"Problema ao abrir formulário de cadastro de funcionários.\n"+ex);
                }
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAlterar;
    private javax.swing.JButton jBAnterior;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBExcluir;
    private javax.swing.JButton jBImprimir;
    private javax.swing.JButton jBNovo;
    private javax.swing.JButton jBPesquisa;
    private javax.swing.JButton jBPesquisar;
    private javax.swing.JButton jBProximo;
    private javax.swing.JButton jBProximo2;
    private javax.swing.JButton jBSalvar;
    private javax.swing.JButton jBVoltar;
    private javax.swing.JComboBox jCAno;
    private javax.swing.JComboBox jCBusca;
    private javax.swing.JComboBox jCDia;
    private javax.swing.JComboBox jCEstado;
    private javax.swing.JComboBox jCEstadoCivil;
    private javax.swing.JComboBox jCMes;
    private javax.swing.JComboBox jCSexo;
    private javax.swing.JComboBox jCStatus;
    private javax.swing.JTextField jFCel;
    private javax.swing.JTextField jFId;
    private javax.swing.JTextField jFTCep;
    private javax.swing.JTextField jFTCpf;
    private javax.swing.JTextField jFTelCom;
    private javax.swing.JTextField jFTelRec;
    private javax.swing.JTextField jFTelRes;
    private javax.swing.JLabel jLBairro;
    private javax.swing.JLabel jLBusca;
    private javax.swing.JLabel jLCargo;
    private javax.swing.JLabel jLCel;
    private javax.swing.JLabel jLCep;
    private javax.swing.JLabel jLCidade;
    private javax.swing.JLabel jLCodigo;
    private javax.swing.JLabel jLComplemento;
    private javax.swing.JLabel jLCpf;
    private javax.swing.JLabel jLDtInvalida;
    private javax.swing.JLabel jLDtNasc;
    private javax.swing.JLabel jLEmail;
    private javax.swing.JLabel jLEstadoCivil;
    private javax.swing.JLabel jLId;
    private javax.swing.JLabel jLNacionalidade;
    private javax.swing.JLabel jLNome;
    private javax.swing.JLabel jLNumero;
    private javax.swing.JLabel jLObrBairro;
    private javax.swing.JLabel jLObrCargo;
    private javax.swing.JLabel jLObrCep;
    private javax.swing.JLabel jLObrCidade;
    private javax.swing.JLabel jLObrContato;
    private javax.swing.JLabel jLObrCpf;
    private javax.swing.JLabel jLObrDtNasc;
    private javax.swing.JLabel jLObrEstCivil;
    private javax.swing.JLabel jLObrNac;
    private javax.swing.JLabel jLObrNome;
    private javax.swing.JLabel jLObrNum;
    private javax.swing.JLabel jLObrPais;
    private javax.swing.JLabel jLObrRg;
    private javax.swing.JLabel jLObrRua;
    private javax.swing.JLabel jLObrSalario;
    private javax.swing.JLabel jLObrSexo;
    private javax.swing.JLabel jLObrUf;
    private javax.swing.JLabel jLObs;
    private javax.swing.JLabel jLPais;
    private javax.swing.JLabel jLRg;
    private javax.swing.JLabel jLRua;
    private javax.swing.JLabel jLSalario;
    private javax.swing.JLabel jLSexo;
    private javax.swing.JLabel jLStatus;
    private javax.swing.JLabel jLTelCom;
    private javax.swing.JLabel jLTelRec;
    private javax.swing.JLabel jLTelRes;
    private javax.swing.JLabel jLUf;
    private javax.swing.JLabel jLValidacao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPBotoes;
    private javax.swing.JPanel jPBusca;
    private javax.swing.JPanel jPContato;
    private javax.swing.JPanel jPDados;
    private javax.swing.JPanel jPDadosGerais;
    private javax.swing.JPanel jPEnd;
    private javax.swing.JPanel jPEndereco;
    private javax.swing.JPanel jPPesquisa;
    private javax.swing.JScrollPane jSDados;
    private javax.swing.JScrollPane jSObs;
    private javax.swing.JTextField jTBairro;
    private javax.swing.JTextField jTCargo;
    private javax.swing.JTextField jTCidade;
    private javax.swing.JTextField jTCodigo;
    private javax.swing.JTextField jTComplemento;
    private javax.swing.JLabel jTDtNasc;
    private javax.swing.JTextField jTEmail;
    private javax.swing.JTabbedPane jTFuncionarios;
    private javax.swing.JTextField jTNacionalidade;
    private javax.swing.JTextField jTNome;
    private javax.swing.JTextField jTNumero;
    private javax.swing.JTextArea jTObs;
    private javax.swing.JTextField jTPais;
    private javax.swing.JTable jTPesquisa;
    private javax.swing.JTextField jTPesquisar;
    private javax.swing.JTextField jTRg;
    private javax.swing.JTextField jTRua;
    private javax.swing.JTextField jTSalario;
    // End of variables declaration//GEN-END:variables
}
