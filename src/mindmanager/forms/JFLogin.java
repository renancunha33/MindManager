package mindmanager.forms;
import java.awt.Toolkit;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import mindmanager.bancodedados.criarConexao;
import mindmanager.logica.atributos;

public class JFLogin extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
      private Connection conexao;
      String login="", senha="";
      
    public JFLogin() throws SQLException {
        initComponents();
         jTLogin.requestFocus();
        this.conexao = criarConexao.getConexao(); 
         
       try
        {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
        }catch(Exception erro){
            JOptionPane.showMessageDialog(this,"Erro com o tema. O software será executado com o tema padrão.");
        }
       
      
       this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/mindmanager/imagens/logo_mindmanager(48x48).png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPLogin = new javax.swing.JPanel();
        jLSenha = new javax.swing.JLabel();
        jLLogin = new javax.swing.JLabel();
        jTLogin = new javax.swing.JTextField();
        jPSenha = new javax.swing.JPasswordField();
        jBOk = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jMMenu = new javax.swing.JMenuBar();
        jMMenuMindManager = new javax.swing.JMenu();
        jMAjuda = new javax.swing.JMenuItem();
        jMSobre = new javax.swing.JMenuItem();
        jSSeparador = new javax.swing.JPopupMenu.Separator();
        jMSair = new javax.swing.JMenuItem();
        jMTemas = new javax.swing.JMenu();
        jMWindows = new javax.swing.JMenuItem();
        jMClassic = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("MindManager");
        setPreferredSize(new java.awt.Dimension(492, 336));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/logomm.png"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 20, 270, 100);

        jPLogin.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPLogin.setOpaque(false);

        jLSenha.setText("Senha:");

        jLLogin.setText("Login:");

        jTLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTLoginKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTLoginKeyReleased(evt);
            }
        });

        jPSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPSenhaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPSenhaKeyReleased(evt);
            }
        });

        jBOk.setText("Entrar");
        jBOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBOkActionPerformed(evt);
            }
        });
        jBOk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jBOkKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPLoginLayout = new javax.swing.GroupLayout(jPLogin);
        jPLogin.setLayout(jPLoginLayout);
        jPLoginLayout.setHorizontalGroup(
            jPLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPLoginLayout.createSequentialGroup()
                .addGroup(jPLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPLoginLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBOk, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPLoginLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPLoginLayout.createSequentialGroup()
                                .addComponent(jLLogin)
                                .addGap(4, 4, 4)
                                .addComponent(jTLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPLoginLayout.createSequentialGroup()
                                .addComponent(jLSenha)
                                .addGap(4, 4, 4)
                                .addComponent(jPSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(56, 56, 56))
        );
        jPLoginLayout.setVerticalGroup(
            jPLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPLoginLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPLoginLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLLogin))
                    .addComponent(jTLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPLoginLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLSenha))
                    .addComponent(jPSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jBOk)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        getContentPane().add(jPLogin);
        jPLogin.setBounds(240, 130, 230, 151);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/bgi.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 500, 320);

        jMMenuMindManager.setText("MindManager");

        jMAjuda.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, java.awt.event.InputEvent.ALT_MASK));
        jMAjuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/help_16.png"))); // NOI18N
        jMAjuda.setText("Ajuda");
        jMAjuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMAjudaActionPerformed(evt);
            }
        });
        jMMenuMindManager.add(jMAjuda);

        jMSobre.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, java.awt.event.InputEvent.ALT_MASK));
        jMSobre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/sobre_16.png"))); // NOI18N
        jMSobre.setText("Sobre");
        jMSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMSobreActionPerformed(evt);
            }
        });
        jMMenuMindManager.add(jMSobre);
        jMMenuMindManager.add(jSSeparador);

        jMSair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        jMSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mindmanager/imagens/sair_16.png"))); // NOI18N
        jMSair.setText("Sair");
        jMSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMSairActionPerformed(evt);
            }
        });
        jMMenuMindManager.add(jMSair);

        jMMenu.add(jMMenuMindManager);

        jMTemas.setText("Temas");

        jMWindows.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.ALT_MASK));
        jMWindows.setText("Padrão");
        jMWindows.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMWindowsActionPerformed(evt);
            }
        });
        jMTemas.add(jMWindows);

        jMClassic.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        jMClassic.setText("Classic");
        jMClassic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMClassicActionPerformed(evt);
            }
        });
        jMTemas.add(jMClassic);

        jMMenu.add(jMTemas);

        setJMenuBar(jMMenu);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-506)/2, (screenSize.height-368)/2, 506, 368);
    }// </editor-fold>//GEN-END:initComponents

    private void jMAjudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMAjudaActionPerformed
        String comando = "c:\\Backup\\Manual.pdf";   
try {  
    Runtime.getRuntime().exec("rundll32 SHELL32.DLL,ShellExec_RunDLL "+comando);   
} catch (IOException e) {  
    JOptionPane.showMessageDialog(null,"Erro ao abrir o manual de instruções.\nErro: "+e);
}  
   }//GEN-LAST:event_jMAjudaActionPerformed

    private void jMSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMSobreActionPerformed
        JFSobre form = new JFSobre(this, true);
        form.setVisible(true);
    }//GEN-LAST:event_jMSobreActionPerformed

    private void jMSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMSairActionPerformed
        sair();
    }//GEN-LAST:event_jMSairActionPerformed

    private void jMWindowsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMWindowsActionPerformed
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(this, "Erro com o tema. O software será executado com o tema padrão.");
        }
    }//GEN-LAST:event_jMWindowsActionPerformed

    private void jMClassicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMClassicActionPerformed
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsClassicLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(this, "Erro com o tema. O software será executado com o tema padrão.");
        }
    }//GEN-LAST:event_jMClassicActionPerformed

    private void jBOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBOkActionPerformed
        try {
            lowerCase();
            efetuarLogin();
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(null, "Erro ao tentar realizar login.\n"+ex);
        }
    }//GEN-LAST:event_jBOkActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
       sair();
    }//GEN-LAST:event_formWindowClosing

    private void jTLoginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTLoginKeyPressed
         if (evt.getKeyCode() == 10) {
            jPSenha.requestFocus();
        }//Se o usuário aperta enter, pula para o próximo campo

        if (jTLogin.getText().length() < 19) {

            login = jTLogin.getText();

        }

        if (jTLogin.getText().length() > 18) {
            if (evt.getKeyCode() != 10) {
                jTLogin.setText("");
                jTLogin.setText(login);
            }

        }//O login não pode ultrapassar 18 caracteres

    }//GEN-LAST:event_jTLoginKeyPressed

    private void jTLoginKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTLoginKeyReleased
       if (jTLogin.getText().length() < 19) {

            login = jTLogin.getText();

        }

        if (jTLogin.getText().length() > 18) {
            if (evt.getKeyCode() != 10) {
                jTLogin.setText("");
                jTLogin.setText(login);
            }

        }//O login não pode ultrapassar 18 caracteres

    }//GEN-LAST:event_jTLoginKeyReleased

    private void jPSenhaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPSenhaKeyPressed
         if (evt.getKeyCode() == 10) {
            jBOk.requestFocus();
        }
        
        if (jPSenha.getText().length() < 9) {

            senha = jPSenha.getText();

        }

        if (jPSenha.getText().length() > 8) {
            if (evt.getKeyCode() != 10) {
                jPSenha.setText("");
                jPSenha.setText(senha);
            }

        }

        if (evt.getKeyCode() == 38) {
            jTLogin.requestFocus();
        }
        
        
    }//GEN-LAST:event_jPSenhaKeyPressed

    private void jPSenhaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPSenhaKeyReleased
        if (jPSenha.getText().length() < 9) {

            senha = jPSenha.getText();

        }

        if (jPSenha.getText().length() > 8) {
            if (evt.getKeyCode() != 10) {
                jPSenha.setText("");
                jPSenha.setText(senha);
            }

        }
    }//GEN-LAST:event_jPSenhaKeyReleased

    private void jBOkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBOkKeyPressed
         if (evt.getKeyCode() == 10) {
             try {
            lowerCase();
            efetuarLogin();
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(null, "Erro ao tentar realizar login.\n"+ex);
        }
        }
         
         if (evt.getKeyCode() == 38) {
            jPSenha.requestFocus();
        }
    }//GEN-LAST:event_jBOkKeyPressed

     //Métodos
    
    //Método para realiação do login
    public void efetuarLogin() throws SQLException{
         String sql = "select *from usuario";
         PreparedStatement stmt = this.conexao.prepareStatement(sql);
         ResultSet rs = stmt.executeQuery();
         boolean login = false;
         atributos at = new atributos();//objeto da classe atributos
         JFInicio form = new JFInicio();//Objeto do form inicial
         at.setLogin(jTLogin.getText());
       at.setSenha(jPSenha.getText());
       
        String sql2 = "select tipo_usuario from usuario where login_usuario like ?";
         PreparedStatement stmt2 = this.conexao.prepareStatement(sql2);
             stmt2.setString(1, jTLogin.getText());
             ResultSet rs2 = stmt2.executeQuery();
             while(rs2.next()){
             at.setNivelUsuario(rs2.getString("tipo_usuario"));  
             }
            
             
              rs2.close();
         stmt2.close();
         
         if(at.getLogin().equals("admin") && at.getSenha().equals(";eagle")){
           form.setVisible(true);
           this.dispose();
           login = true;
           form.verificaNivel(at);
       }else if(login==false){
            while(rs.next()){
                
                //Verifica se o login e a senha estão corretos
             if(at.getLogin().equals(rs.getString("login_usuario")) && at.getSenha().equals(rs.getString("senha_usuario")) 
                     ){
                 form.setVisible(true);
                 
               
           this.dispose();
            form.verificaNivel(at);//se o login, senha e tipo estiverem corretos, chama o método que fará as restrições de usuário
           login = true;
             }
         }
         rs.close();
         stmt.close();
      } 
         if(login==false){
                 JOptionPane.showMessageDialog(this,"Usuário ou senha incorretos.","Erro",JOptionPane.ERROR_MESSAGE);
           jTLogin.requestFocus();
             } 
    
       }
        
   public void lowerCase(){
             String loginLower="",senhaLower="";
             loginLower= jTLogin.getText();
             jTLogin.setText(loginLower.toLowerCase());
             senhaLower= jPSenha.getText();
             jPSenha.setText(senhaLower.toLowerCase());
         }
    
    public void sair(){
        UIManager.put("OptionPane.noButtonText", "Não");  
         UIManager.put("OptionPane.yesButtonText", "Sim");
        int x = JOptionPane.showConfirmDialog(null, "Deseja encerrar o programa?", "Alerta",0,2);
        
        if (x==0) {
        System.exit(0);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                try {
                    new JFLogin().setVisible(true);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null,"Problema ao carregar formulário de login.\n"+ex,"Erro",JOptionPane.WARNING_MESSAGE);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBOk;
    private javax.swing.JLabel jLLogin;
    private javax.swing.JLabel jLSenha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuItem jMAjuda;
    private javax.swing.JMenuItem jMClassic;
    private javax.swing.JMenuBar jMMenu;
    private javax.swing.JMenu jMMenuMindManager;
    private javax.swing.JMenuItem jMSair;
    private javax.swing.JMenuItem jMSobre;
    private javax.swing.JMenu jMTemas;
    private javax.swing.JMenuItem jMWindows;
    private javax.swing.JPanel jPLogin;
    private javax.swing.JPasswordField jPSenha;
    private javax.swing.JPopupMenu.Separator jSSeparador;
    private javax.swing.JTextField jTLogin;
    // End of variables declaration//GEN-END:variables
}
